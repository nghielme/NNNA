// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module add_top_plus_minus_25_2_8_0_25_2_8_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [71:0] p_read;
input  [71:0] p_read1;
output  [95:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[95:0] ap_return;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_set_fu_242_ap_return;
wire   [0:0] icmp_ln682_fu_926_p2;
reg   [24:0] trunc_ln609_4_reg_1017;
wire   [8:0] trunc_ln1168_fu_994_p1;
reg   [8:0] trunc_ln1168_reg_1025;
wire    ap_CS_fsm_state2;
wire    r_v_v_set_fu_107_ap_ready;
wire   [31:0] r_v_v_set_fu_107_value_r;
wire   [63:0] r_v_v_set_fu_107_ap_return;
wire    r_v_v_1_set_fu_116_ap_ready;
wire   [31:0] r_v_v_1_set_fu_116_value_r;
wire   [63:0] r_v_v_1_set_fu_116_ap_return;
wire    r_v_v_2_set_fu_125_ap_ready;
wire   [31:0] r_v_v_2_set_fu_125_value_r;
wire   [63:0] r_v_v_2_set_fu_125_ap_return;
wire    r_v_v_3_set_fu_134_ap_ready;
wire   [31:0] r_v_v_3_set_fu_134_value_r;
wire   [63:0] r_v_v_3_set_fu_134_ap_return;
wire    r_v_v_4_set_fu_143_ap_ready;
wire   [31:0] r_v_v_4_set_fu_143_value_r;
wire   [63:0] r_v_v_4_set_fu_143_ap_return;
wire    r_v_v_5_set_fu_152_ap_ready;
wire   [31:0] r_v_v_5_set_fu_152_value_r;
wire   [63:0] r_v_v_5_set_fu_152_ap_return;
wire    r_v_v_6_set_fu_161_ap_ready;
wire   [31:0] r_v_v_6_set_fu_161_value_r;
wire   [63:0] r_v_v_6_set_fu_161_ap_return;
wire    r_v_v_7_set_fu_170_ap_ready;
wire   [31:0] r_v_v_7_set_fu_170_value_r;
wire   [63:0] r_v_v_7_set_fu_170_ap_return;
wire    r_v_v_8_set_fu_179_ap_ready;
wire   [31:0] r_v_v_8_set_fu_179_value_r;
wire   [63:0] r_v_v_8_set_fu_179_ap_return;
wire    r_v_v_9_set_fu_188_ap_ready;
wire   [31:0] r_v_v_9_set_fu_188_value_r;
wire   [63:0] r_v_v_9_set_fu_188_ap_return;
wire    r_v_v_10_set_fu_197_ap_ready;
wire   [31:0] r_v_v_10_set_fu_197_value_r;
wire   [63:0] r_v_v_10_set_fu_197_ap_return;
wire    r_v_v_11_set_fu_206_ap_ready;
wire   [31:0] r_v_v_11_set_fu_206_value_r;
wire   [63:0] r_v_v_11_set_fu_206_ap_return;
wire    r_v_v_12_set_fu_215_ap_ready;
wire   [31:0] r_v_v_12_set_fu_215_value_r;
wire   [63:0] r_v_v_12_set_fu_215_ap_return;
wire    r_v_v_13_set_fu_224_ap_ready;
wire   [31:0] r_v_v_13_set_fu_224_value_r;
wire   [63:0] r_v_v_13_set_fu_224_ap_return;
wire    r_v_v_14_set_fu_233_ap_ready;
wire   [31:0] r_v_v_14_set_fu_233_value_r;
wire   [63:0] r_v_v_14_set_fu_233_ap_return;
wire    grp_set_fu_242_ap_ready;
reg   [31:0] grp_set_fu_242_value_r;
wire    grp_adjust_9_s_fu_252_ap_start;
wire    grp_adjust_9_s_fu_252_ap_done;
wire    grp_adjust_9_s_fu_252_ap_idle;
wire    grp_adjust_9_s_fu_252_ap_ready;
wire   [31:0] grp_adjust_9_s_fu_252_ap_return_0;
wire   [31:0] grp_adjust_9_s_fu_252_ap_return_1;
reg   [63:0] phi_ln609_reg_98;
wire   [31:0] select_ln678_2_fu_985_p3;
reg    grp_adjust_9_s_fu_252_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [7:0] trunc_ln609_1_fu_274_p4;
wire  signed [8:0] sext_ln1309_fu_284_p1;
wire  signed [8:0] add_ln1309_fu_288_p2;
wire   [0:0] tmp_1_fu_299_p3;
wire   [31:0] trunc_ln678_fu_316_p1;
wire   [32:0] zext_ln1377_fu_320_p1;
wire   [32:0] l_fu_324_p2;
wire   [0:0] tmp_2_fu_337_p3;
wire   [0:0] tmp_3_fu_353_p3;
wire   [1:0] select_ln678_fu_345_p3;
wire   [1:0] select_ln1389_fu_361_p3;
wire   [1:0] add_ln1389_fu_369_p2;
wire   [1:0] trunc_ln678_3_fu_385_p4;
wire   [7:0] trunc_ln609_3_fu_416_p4;
wire  signed [8:0] sext_ln1309_1_fu_426_p1;
wire  signed [8:0] add_ln1309_1_fu_430_p2;
wire   [0:0] tmp_4_fu_441_p3;
wire   [31:0] trunc_ln678_2_fu_458_p1;
wire   [32:0] zext_ln1377_1_fu_462_p1;
wire   [32:0] l_1_fu_466_p2;
wire   [0:0] tmp_5_fu_479_p3;
wire   [0:0] tmp_6_fu_495_p3;
wire   [1:0] select_ln678_1_fu_487_p3;
wire   [1:0] select_ln1389_1_fu_503_p3;
wire   [1:0] add_ln1389_1_fu_511_p2;
wire   [1:0] trunc_ln678_7_fu_527_p4;
wire   [31:0] trunc_ln319_fu_266_p1;
wire   [31:0] trunc_ln319_1_fu_408_p1;
wire   [31:0] op1_e_fu_404_p1;
wire   [31:0] op2_e_fu_546_p1;
wire   [31:0] e_dif_fu_562_p2;
wire   [0:0] retval_fu_550_p2;
wire   [0:0] retval_1_fu_556_p2;
wire   [0:0] e1_lt_e2_fu_568_p3;
wire   [31:0] sub_ln657_fu_582_p2;
wire   [0:0] or_ln657_fu_576_p2;
wire   [31:0] select_ln657_fu_588_p3;
wire   [31:0] e_dif_1_fu_596_p3;
wire   [25:0] trunc_ln609_fu_270_p1;
wire   [25:0] trunc_ln609_2_fu_412_p1;
wire  signed [25:0] op_sl_fu_608_p3;
wire   [4:0] s31_fu_604_p1;
wire   [31:0] sub_ln1845_fu_642_p2;
wire   [25:0] tmp_10_fu_660_p4;
wire   [0:0] icmp_ln1795_fu_670_p2;
wire   [0:0] tmp_9_fu_652_p3;
wire   [4:0] s31_1_fu_648_p1;
wire   [0:0] ishift_fu_676_p2;
wire   [0:0] icmp_ln1796_1_fu_682_p2;
wire   [0:0] xor_ln1796_fu_688_p2;
wire   [25:0] s31_1cast_fu_700_p1;
wire   [0:0] and_ln1796_fu_694_p2;
wire   [25:0] shl_ln1799_fu_704_p2;
wire   [25:0] select_ln1807_fu_710_p3;
wire   [25:0] tmp_12_fu_734_p4;
wire   [0:0] icmp_ln1815_fu_744_p2;
wire   [0:0] tmp_11_fu_726_p3;
wire   [0:0] ext_fu_756_p3;
wire   [5:0] zext_ln1794_1_fu_632_p1;
wire   [5:0] sub_i_i_i_i_i507_fu_780_p2;
wire  signed [31:0] sext_ln658_fu_616_p1;
wire   [31:0] zext_ln1794_fu_628_p1;
wire   [31:0] lshr_ln1820_fu_790_p2;
wire   [31:0] select_ln1816_fu_764_p3;
wire   [31:0] zext_ln1820_fu_786_p1;
wire   [31:0] shl_ln1820_fu_800_p2;
wire   [25:0] trunc_ln1820_1_fu_806_p1;
wire   [25:0] trunc_ln1820_fu_796_p1;
wire   [0:0] ishift_1_fu_750_p2;
wire   [25:0] select_ln1816_1_fu_772_p3;
wire   [0:0] tmp_8_fu_620_p3;
wire   [25:0] select_ln1796_fu_718_p3;
wire   [25:0] select_ln1828_fu_816_p3;
wire   [0:0] or_ln1817_fu_832_p2;
wire   [0:0] icmp_ln1796_fu_636_p2;
wire   [0:0] xor_ln1817_fu_838_p2;
wire   [0:0] and_ln1817_fu_844_p2;
wire   [25:0] or_ln1820_fu_810_p2;
wire   [25:0] select_ln1835_fu_824_p3;
wire   [25:0] select_ln609_fu_850_p3;
wire   [25:0] select_ln665_fu_858_p3;
wire   [25:0] select_ln666_fu_866_p3;
wire   [25:0] add_ln609_fu_874_p2;
wire   [8:0] trunc_ln1325_1_fu_542_p1;
wire   [8:0] trunc_ln1325_fu_400_p1;
wire   [0:0] icmp_ln681_fu_898_p2;
wire   [8:0] select_ln681_fu_890_p3;
wire   [8:0] select_ln681_1_fu_904_p3;
wire   [31:0] or_ln682_fu_920_p2;
wire   [8:0] select_ln681_2_fu_912_p3;
wire  signed [9:0] sext_ln1309_2_fu_932_p1;
wire  signed [9:0] add_ln1309_2_fu_936_p2;
wire   [0:0] tmp_14_fu_947_p3;
wire   [31:0] trunc_ln678_5_fu_964_p1;
wire   [0:0] tmp_15_fu_977_p3;
wire   [95:0] tmp_fu_1007_p4;
reg   [95:0] ap_return_preg;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_adjust_9_s_fu_252_ap_start_reg = 1'b0;
#0 ap_return_preg = 96'd0;
end

add_top_set r_v_v_set_fu_107(
    .ap_ready(r_v_v_set_fu_107_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_set_fu_107_value_r),
    .ap_return(r_v_v_set_fu_107_ap_return)
);

add_top_set r_v_v_1_set_fu_116(
    .ap_ready(r_v_v_1_set_fu_116_ap_ready),
    .this_v_read(r_v_v_set_fu_107_ap_return),
    .x(1'd1),
    .value_r(r_v_v_1_set_fu_116_value_r),
    .ap_return(r_v_v_1_set_fu_116_ap_return)
);

add_top_set r_v_v_2_set_fu_125(
    .ap_ready(r_v_v_2_set_fu_125_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_2_set_fu_125_value_r),
    .ap_return(r_v_v_2_set_fu_125_ap_return)
);

add_top_set r_v_v_3_set_fu_134(
    .ap_ready(r_v_v_3_set_fu_134_ap_ready),
    .this_v_read(r_v_v_2_set_fu_125_ap_return),
    .x(1'd1),
    .value_r(r_v_v_3_set_fu_134_value_r),
    .ap_return(r_v_v_3_set_fu_134_ap_return)
);

add_top_set r_v_v_4_set_fu_143(
    .ap_ready(r_v_v_4_set_fu_143_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_4_set_fu_143_value_r),
    .ap_return(r_v_v_4_set_fu_143_ap_return)
);

add_top_set r_v_v_5_set_fu_152(
    .ap_ready(r_v_v_5_set_fu_152_ap_ready),
    .this_v_read(r_v_v_4_set_fu_143_ap_return),
    .x(1'd1),
    .value_r(r_v_v_5_set_fu_152_value_r),
    .ap_return(r_v_v_5_set_fu_152_ap_return)
);

add_top_set r_v_v_6_set_fu_161(
    .ap_ready(r_v_v_6_set_fu_161_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_6_set_fu_161_value_r),
    .ap_return(r_v_v_6_set_fu_161_ap_return)
);

add_top_set r_v_v_7_set_fu_170(
    .ap_ready(r_v_v_7_set_fu_170_ap_ready),
    .this_v_read(r_v_v_6_set_fu_161_ap_return),
    .x(1'd1),
    .value_r(r_v_v_7_set_fu_170_value_r),
    .ap_return(r_v_v_7_set_fu_170_ap_return)
);

add_top_set r_v_v_8_set_fu_179(
    .ap_ready(r_v_v_8_set_fu_179_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_8_set_fu_179_value_r),
    .ap_return(r_v_v_8_set_fu_179_ap_return)
);

add_top_set r_v_v_9_set_fu_188(
    .ap_ready(r_v_v_9_set_fu_188_ap_ready),
    .this_v_read(r_v_v_8_set_fu_179_ap_return),
    .x(1'd1),
    .value_r(r_v_v_9_set_fu_188_value_r),
    .ap_return(r_v_v_9_set_fu_188_ap_return)
);

add_top_set r_v_v_10_set_fu_197(
    .ap_ready(r_v_v_10_set_fu_197_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_10_set_fu_197_value_r),
    .ap_return(r_v_v_10_set_fu_197_ap_return)
);

add_top_set r_v_v_11_set_fu_206(
    .ap_ready(r_v_v_11_set_fu_206_ap_ready),
    .this_v_read(r_v_v_10_set_fu_197_ap_return),
    .x(1'd1),
    .value_r(r_v_v_11_set_fu_206_value_r),
    .ap_return(r_v_v_11_set_fu_206_ap_return)
);

add_top_set r_v_v_12_set_fu_215(
    .ap_ready(r_v_v_12_set_fu_215_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_12_set_fu_215_value_r),
    .ap_return(r_v_v_12_set_fu_215_ap_return)
);

add_top_set r_v_v_13_set_fu_224(
    .ap_ready(r_v_v_13_set_fu_224_ap_ready),
    .this_v_read(r_v_v_12_set_fu_215_ap_return),
    .x(1'd1),
    .value_r(r_v_v_13_set_fu_224_value_r),
    .ap_return(r_v_v_13_set_fu_224_ap_return)
);

add_top_set r_v_v_14_set_fu_233(
    .ap_ready(r_v_v_14_set_fu_233_ap_ready),
    .this_v_read(64'd0),
    .x(1'd0),
    .value_r(r_v_v_14_set_fu_233_value_r),
    .ap_return(r_v_v_14_set_fu_233_ap_return)
);

add_top_set grp_set_fu_242(
    .ap_ready(grp_set_fu_242_ap_ready),
    .this_v_read(r_v_v_14_set_fu_233_ap_return),
    .x(1'd1),
    .value_r(grp_set_fu_242_value_r),
    .ap_return(grp_set_fu_242_ap_return)
);

add_top_adjust_9_s grp_adjust_9_s_fu_252(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_adjust_9_s_fu_252_ap_start),
    .ap_done(grp_adjust_9_s_fu_252_ap_done),
    .ap_idle(grp_adjust_9_s_fu_252_ap_idle),
    .ap_ready(grp_adjust_9_s_fu_252_ap_ready),
    .this_m_0_read(trunc_ln609_4_reg_1017),
    .new_e_0(trunc_ln1168_reg_1025),
    .ap_return_0(grp_adjust_9_s_fu_252_ap_return_0),
    .ap_return_1(grp_adjust_9_s_fu_252_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_preg[0] <= 1'b0;
        ap_return_preg[1] <= 1'b0;
        ap_return_preg[2] <= 1'b0;
        ap_return_preg[3] <= 1'b0;
        ap_return_preg[4] <= 1'b0;
        ap_return_preg[5] <= 1'b0;
        ap_return_preg[6] <= 1'b0;
        ap_return_preg[7] <= 1'b0;
        ap_return_preg[8] <= 1'b0;
        ap_return_preg[9] <= 1'b0;
        ap_return_preg[10] <= 1'b0;
        ap_return_preg[11] <= 1'b0;
        ap_return_preg[12] <= 1'b0;
        ap_return_preg[13] <= 1'b0;
        ap_return_preg[14] <= 1'b0;
        ap_return_preg[15] <= 1'b0;
        ap_return_preg[16] <= 1'b0;
        ap_return_preg[17] <= 1'b0;
        ap_return_preg[18] <= 1'b0;
        ap_return_preg[19] <= 1'b0;
        ap_return_preg[20] <= 1'b0;
        ap_return_preg[21] <= 1'b0;
        ap_return_preg[22] <= 1'b0;
        ap_return_preg[23] <= 1'b0;
        ap_return_preg[24] <= 1'b0;
        ap_return_preg[25] <= 1'b0;
        ap_return_preg[26] <= 1'b0;
        ap_return_preg[27] <= 1'b0;
        ap_return_preg[28] <= 1'b0;
        ap_return_preg[29] <= 1'b0;
        ap_return_preg[30] <= 1'b0;
        ap_return_preg[31] <= 1'b0;
        ap_return_preg[64] <= 1'b0;
        ap_return_preg[65] <= 1'b0;
        ap_return_preg[66] <= 1'b0;
        ap_return_preg[67] <= 1'b0;
        ap_return_preg[68] <= 1'b0;
        ap_return_preg[69] <= 1'b0;
        ap_return_preg[70] <= 1'b0;
        ap_return_preg[71] <= 1'b0;
        ap_return_preg[72] <= 1'b0;
        ap_return_preg[73] <= 1'b0;
        ap_return_preg[74] <= 1'b0;
        ap_return_preg[75] <= 1'b0;
        ap_return_preg[76] <= 1'b0;
        ap_return_preg[77] <= 1'b0;
        ap_return_preg[78] <= 1'b0;
        ap_return_preg[79] <= 1'b0;
        ap_return_preg[80] <= 1'b0;
        ap_return_preg[81] <= 1'b0;
        ap_return_preg[82] <= 1'b0;
        ap_return_preg[83] <= 1'b0;
        ap_return_preg[84] <= 1'b0;
        ap_return_preg[85] <= 1'b0;
        ap_return_preg[86] <= 1'b0;
        ap_return_preg[87] <= 1'b0;
        ap_return_preg[88] <= 1'b0;
        ap_return_preg[89] <= 1'b0;
        ap_return_preg[90] <= 1'b0;
        ap_return_preg[91] <= 1'b0;
        ap_return_preg[92] <= 1'b0;
        ap_return_preg[93] <= 1'b0;
        ap_return_preg[94] <= 1'b0;
        ap_return_preg[95] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (grp_adjust_9_s_fu_252_ap_done == 1'b1))) begin
                        ap_return_preg[31 : 0] <= tmp_fu_1007_p4[31 : 0];
            ap_return_preg[95 : 64] <= tmp_fu_1007_p4[95 : 64];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_adjust_9_s_fu_252_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_adjust_9_s_fu_252_ap_start_reg <= 1'b1;
        end else if ((grp_adjust_9_s_fu_252_ap_ready == 1'b1)) begin
            grp_adjust_9_s_fu_252_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_start == 1'b1) & (icmp_ln682_fu_926_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((ap_start == 1'b1) & (icmp_ln682_fu_926_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        phi_ln609_reg_98 <= grp_set_fu_242_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        trunc_ln1168_reg_1025 <= trunc_ln1168_fu_994_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln609_4_reg_1017 <= {{add_ln609_fu_874_p2[25:1]}};
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_adjust_9_s_fu_252_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (grp_adjust_9_s_fu_252_ap_done == 1'b1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_adjust_9_s_fu_252_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_adjust_9_s_fu_252_ap_done == 1'b1))) begin
        ap_return = tmp_fu_1007_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((icmp_ln682_fu_926_p2 == 1'd1)) begin
            grp_set_fu_242_value_r = select_ln678_2_fu_985_p3;
        end else if ((icmp_ln682_fu_926_p2 == 1'd0)) begin
            grp_set_fu_242_value_r = 32'd0;
        end else begin
            grp_set_fu_242_value_r = 'bx;
        end
    end else begin
        grp_set_fu_242_value_r = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_adjust_9_s_fu_252_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1309_1_fu_430_p2 = ($signed(sext_ln1309_1_fu_426_p1) + $signed(9'd2));

assign add_ln1309_2_fu_936_p2 = ($signed(sext_ln1309_2_fu_932_p1) + $signed(10'd1));

assign add_ln1309_fu_288_p2 = ($signed(sext_ln1309_fu_284_p1) + $signed(9'd2));

assign add_ln1389_1_fu_511_p2 = (select_ln678_1_fu_487_p3 + select_ln1389_1_fu_503_p3);

assign add_ln1389_fu_369_p2 = (select_ln678_fu_345_p3 + select_ln1389_fu_361_p3);

assign add_ln609_fu_874_p2 = (select_ln665_fu_858_p3 + select_ln666_fu_866_p3);

assign and_ln1796_fu_694_p2 = (xor_ln1796_fu_688_p2 & icmp_ln1796_1_fu_682_p2);

assign and_ln1817_fu_844_p2 = (xor_ln1817_fu_838_p2 & icmp_ln1796_fu_636_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign e1_lt_e2_fu_568_p3 = e_dif_fu_562_p2[32'd31];

assign e_dif_1_fu_596_p3 = ((or_ln657_fu_576_p2[0:0] == 1'b1) ? 32'd0 : select_ln657_fu_588_p3);

assign e_dif_fu_562_p2 = (op1_e_fu_404_p1 - op2_e_fu_546_p1);

assign ext_fu_756_p3 = op_sl_fu_608_p3[32'd25];

assign grp_adjust_9_s_fu_252_ap_start = grp_adjust_9_s_fu_252_ap_start_reg;

assign icmp_ln1795_fu_670_p2 = ((tmp_10_fu_660_p4 != 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln1796_1_fu_682_p2 = ((s31_1_fu_648_p1 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln1796_fu_636_p2 = ((s31_fu_604_p1 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln1815_fu_744_p2 = ((tmp_12_fu_734_p4 != 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln681_fu_898_p2 = (($signed(op1_e_fu_404_p1) > $signed(op2_e_fu_546_p1)) ? 1'b1 : 1'b0);

assign icmp_ln682_fu_926_p2 = ((or_ln682_fu_920_p2 != 32'd0) ? 1'b1 : 1'b0);

assign ishift_1_fu_750_p2 = (tmp_11_fu_726_p3 | icmp_ln1815_fu_744_p2);

assign ishift_fu_676_p2 = (tmp_9_fu_652_p3 | icmp_ln1795_fu_670_p2);

assign l_1_fu_466_p2 = ($signed(zext_ln1377_1_fu_462_p1) + $signed(33'd8589934590));

assign l_fu_324_p2 = ($signed(zext_ln1377_fu_320_p1) + $signed(33'd8589934590));

assign lshr_ln1820_fu_790_p2 = sext_ln658_fu_616_p1 >> zext_ln1794_fu_628_p1;

assign op1_e_fu_404_p1 = r_v_v_5_set_fu_152_ap_return[31:0];

assign op2_e_fu_546_p1 = r_v_v_11_set_fu_206_ap_return[31:0];

assign op_sl_fu_608_p3 = ((e1_lt_e2_fu_568_p3[0:0] == 1'b1) ? trunc_ln609_fu_270_p1 : trunc_ln609_2_fu_412_p1);

assign or_ln1817_fu_832_p2 = (tmp_8_fu_620_p3 | ishift_1_fu_750_p2);

assign or_ln1820_fu_810_p2 = (trunc_ln1820_fu_796_p1 | trunc_ln1820_1_fu_806_p1);

assign or_ln657_fu_576_p2 = (retval_fu_550_p2 | retval_1_fu_556_p2);

assign or_ln682_fu_920_p2 = (trunc_ln319_fu_266_p1 | trunc_ln319_1_fu_408_p1);

assign r_v_v_10_set_fu_197_value_r = r_v_v_9_set_fu_188_ap_return[31:0];

assign r_v_v_11_set_fu_206_value_r = $signed(trunc_ln678_7_fu_527_p4);

assign r_v_v_12_set_fu_215_value_r = $signed(add_ln1309_2_fu_936_p2);

assign r_v_v_13_set_fu_224_value_r = ((tmp_14_fu_947_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign r_v_v_14_set_fu_233_value_r = ((icmp_ln682_fu_926_p2[0:0] == 1'b1) ? trunc_ln678_5_fu_964_p1 : 32'd0);

assign r_v_v_1_set_fu_116_value_r = ((tmp_1_fu_299_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign r_v_v_2_set_fu_125_value_r = ($signed(trunc_ln678_fu_316_p1) + $signed(32'd4294967294));

assign r_v_v_3_set_fu_134_value_r = $signed(add_ln1389_fu_369_p2);

assign r_v_v_4_set_fu_143_value_r = r_v_v_3_set_fu_134_ap_return[31:0];

assign r_v_v_5_set_fu_152_value_r = $signed(trunc_ln678_3_fu_385_p4);

assign r_v_v_6_set_fu_161_value_r = $signed(add_ln1309_1_fu_430_p2);

assign r_v_v_7_set_fu_170_value_r = ((tmp_4_fu_441_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign r_v_v_8_set_fu_179_value_r = ($signed(trunc_ln678_2_fu_458_p1) + $signed(32'd4294967294));

assign r_v_v_9_set_fu_188_value_r = $signed(add_ln1389_1_fu_511_p2);

assign r_v_v_set_fu_107_value_r = $signed(add_ln1309_fu_288_p2);

assign retval_1_fu_556_p2 = ((trunc_ln319_1_fu_408_p1 == 32'd0) ? 1'b1 : 1'b0);

assign retval_fu_550_p2 = ((trunc_ln319_fu_266_p1 == 32'd0) ? 1'b1 : 1'b0);

assign s31_1_fu_648_p1 = sub_ln1845_fu_642_p2[4:0];

assign s31_1cast_fu_700_p1 = s31_1_fu_648_p1;

assign s31_fu_604_p1 = e_dif_1_fu_596_p3[4:0];

assign select_ln1389_1_fu_503_p3 = ((tmp_6_fu_495_p3[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln1389_fu_361_p3 = ((tmp_3_fu_353_p3[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln1796_fu_718_p3 = ((and_ln1796_fu_694_p2[0:0] == 1'b1) ? shl_ln1799_fu_704_p2 : select_ln1807_fu_710_p3);

assign select_ln1807_fu_710_p3 = ((ishift_fu_676_p2[0:0] == 1'b1) ? 26'd0 : op_sl_fu_608_p3);

assign select_ln1816_1_fu_772_p3 = ((ext_fu_756_p3[0:0] == 1'b1) ? 26'd67108863 : 26'd0);

assign select_ln1816_fu_764_p3 = ((ext_fu_756_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln1828_fu_816_p3 = ((ishift_1_fu_750_p2[0:0] == 1'b1) ? select_ln1816_1_fu_772_p3 : op_sl_fu_608_p3);

assign select_ln1835_fu_824_p3 = ((tmp_8_fu_620_p3[0:0] == 1'b1) ? select_ln1796_fu_718_p3 : select_ln1828_fu_816_p3);

assign select_ln609_fu_850_p3 = ((and_ln1817_fu_844_p2[0:0] == 1'b1) ? or_ln1820_fu_810_p2 : select_ln1835_fu_824_p3);

assign select_ln657_fu_588_p3 = ((e1_lt_e2_fu_568_p3[0:0] == 1'b1) ? sub_ln657_fu_582_p2 : e_dif_fu_562_p2);

assign select_ln665_fu_858_p3 = ((e1_lt_e2_fu_568_p3[0:0] == 1'b1) ? select_ln609_fu_850_p3 : trunc_ln609_fu_270_p1);

assign select_ln666_fu_866_p3 = ((e1_lt_e2_fu_568_p3[0:0] == 1'b1) ? trunc_ln609_2_fu_412_p1 : select_ln609_fu_850_p3);

assign select_ln678_1_fu_487_p3 = ((tmp_5_fu_479_p3[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln678_2_fu_985_p3 = ((tmp_15_fu_977_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln678_fu_345_p3 = ((tmp_2_fu_337_p3[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign select_ln681_1_fu_904_p3 = ((icmp_ln681_fu_898_p2[0:0] == 1'b1) ? trunc_ln1325_fu_400_p1 : trunc_ln1325_1_fu_542_p1);

assign select_ln681_2_fu_912_p3 = ((or_ln657_fu_576_p2[0:0] == 1'b1) ? select_ln681_fu_890_p3 : select_ln681_1_fu_904_p3);

assign select_ln681_fu_890_p3 = ((retval_fu_550_p2[0:0] == 1'b1) ? trunc_ln1325_1_fu_542_p1 : trunc_ln1325_fu_400_p1);

assign sext_ln1309_1_fu_426_p1 = $signed(trunc_ln609_3_fu_416_p4);

assign sext_ln1309_2_fu_932_p1 = $signed(select_ln681_2_fu_912_p3);

assign sext_ln1309_fu_284_p1 = $signed(trunc_ln609_1_fu_274_p4);

assign sext_ln658_fu_616_p1 = op_sl_fu_608_p3;

assign shl_ln1799_fu_704_p2 = op_sl_fu_608_p3 << s31_1cast_fu_700_p1;

assign shl_ln1820_fu_800_p2 = select_ln1816_fu_764_p3 << zext_ln1820_fu_786_p1;

assign sub_i_i_i_i_i507_fu_780_p2 = ($signed(6'd32) - $signed(zext_ln1794_1_fu_632_p1));

assign sub_ln1845_fu_642_p2 = (32'd0 - e_dif_1_fu_596_p3);

assign sub_ln657_fu_582_p2 = (32'd0 - e_dif_fu_562_p2);

assign tmp_10_fu_660_p4 = {{sub_ln1845_fu_642_p2[31:6]}};

assign tmp_11_fu_726_p3 = e_dif_1_fu_596_p3[32'd5];

assign tmp_12_fu_734_p4 = {{e_dif_1_fu_596_p3[31:6]}};

assign tmp_14_fu_947_p3 = add_ln1309_2_fu_936_p2[32'd9];

assign tmp_15_fu_977_p3 = r_v_v_13_set_fu_224_ap_return[32'd32];

assign tmp_1_fu_299_p3 = add_ln1309_fu_288_p2[32'd8];

assign tmp_2_fu_337_p3 = l_fu_324_p2[32'd32];

assign tmp_3_fu_353_p3 = r_v_v_1_set_fu_116_ap_return[32'd32];

assign tmp_4_fu_441_p3 = add_ln1309_1_fu_430_p2[32'd8];

assign tmp_5_fu_479_p3 = l_1_fu_466_p2[32'd32];

assign tmp_6_fu_495_p3 = r_v_v_7_set_fu_170_ap_return[32'd32];

assign tmp_8_fu_620_p3 = e_dif_1_fu_596_p3[32'd31];

assign tmp_9_fu_652_p3 = sub_ln1845_fu_642_p2[32'd5];

assign tmp_fu_1007_p4 = {{{grp_adjust_9_s_fu_252_ap_return_0}, {32'd0}}, {grp_adjust_9_s_fu_252_ap_return_1}};

assign trunc_ln1168_fu_994_p1 = phi_ln609_reg_98[8:0];

assign trunc_ln1325_1_fu_542_p1 = r_v_v_11_set_fu_206_ap_return[8:0];

assign trunc_ln1325_fu_400_p1 = r_v_v_5_set_fu_152_ap_return[8:0];

assign trunc_ln1820_1_fu_806_p1 = shl_ln1820_fu_800_p2[25:0];

assign trunc_ln1820_fu_796_p1 = lshr_ln1820_fu_790_p2[25:0];

assign trunc_ln319_1_fu_408_p1 = p_read1[31:0];

assign trunc_ln319_fu_266_p1 = p_read[31:0];

assign trunc_ln609_1_fu_274_p4 = {{p_read[71:64]}};

assign trunc_ln609_2_fu_412_p1 = p_read1[25:0];

assign trunc_ln609_3_fu_416_p4 = {{p_read1[71:64]}};

assign trunc_ln609_fu_270_p1 = p_read[25:0];

assign trunc_ln678_2_fu_458_p1 = r_v_v_7_set_fu_170_ap_return[31:0];

assign trunc_ln678_3_fu_385_p4 = {{r_v_v_3_set_fu_134_ap_return[33:32]}};

assign trunc_ln678_5_fu_964_p1 = r_v_v_13_set_fu_224_ap_return[31:0];

assign trunc_ln678_7_fu_527_p4 = {{r_v_v_9_set_fu_188_ap_return[33:32]}};

assign trunc_ln678_fu_316_p1 = r_v_v_1_set_fu_116_ap_return[31:0];

assign xor_ln1796_fu_688_p2 = (ishift_fu_676_p2 ^ 1'd1);

assign xor_ln1817_fu_838_p2 = (or_ln1817_fu_832_p2 ^ 1'd1);

assign zext_ln1377_1_fu_462_p1 = trunc_ln678_2_fu_458_p1;

assign zext_ln1377_fu_320_p1 = trunc_ln678_fu_316_p1;

assign zext_ln1794_1_fu_632_p1 = s31_fu_604_p1;

assign zext_ln1794_fu_628_p1 = s31_fu_604_p1;

assign zext_ln1820_fu_786_p1 = sub_i_i_i_i_i507_fu_780_p2;

always @ (posedge ap_clk) begin
    ap_return_preg[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //add_top_plus_minus_25_2_8_0_25_2_8_0_s
