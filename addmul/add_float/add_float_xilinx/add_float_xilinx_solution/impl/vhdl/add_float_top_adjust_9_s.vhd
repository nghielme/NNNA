-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity add_float_top_adjust_9_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    this_m_0_read : IN STD_LOGIC_VECTOR (24 downto 0);
    new_e_0 : IN STD_LOGIC_VECTOR (8 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of add_float_top_adjust_9_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_20000000 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_const_lv31_20000000 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv25_1FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111111111";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv10_380 : STD_LOGIC_VECTOR (9 downto 0) := "1110000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv32_C0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv25_1000000 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv25_FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "0111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tab_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal tab_ce0 : STD_LOGIC;
    signal tab_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_fu_224_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_975 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp1_i_i_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp1_i_i_reg_979 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_shift_reg_984 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln609_fu_529_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal icmp_ln2118_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2118_reg_996 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln2122_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2122_reg_1002 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2126_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln2126_reg_1007 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start : STD_LOGIC;
    signal grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done : STD_LOGIC;
    signal grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_idle : STD_LOGIC;
    signal grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_ready : STD_LOGIC;
    signal grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_k_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_k_out_ap_vld : STD_LOGIC;
    signal ap_phi_mux_this_e_0_1_phi_fu_165_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal this_e_0_1_reg_161 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln609_fu_932_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal or_ln543_fu_905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_this_m_0_1_phi_fu_178_p6 : STD_LOGIC_VECTOR (24 downto 0);
    signal this_m_0_1_reg_175 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln609_1_fu_858_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln548_fu_919_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln2130_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal this_m_0_read_cast_fu_192_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln609_fu_196_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_200_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_200_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln609_1_fu_208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln609_fu_212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ext_sign_fu_232_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ext_sign_fu_232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln2137_fu_240_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal cmp1_i_i_fu_248_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1123_fu_218_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sext_ln609_fu_196_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal value_fu_265_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1845_fu_283_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_19_fu_301_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1795_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_293_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal s31_fu_289_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ishift_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s31_2_fu_271_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_21_fu_351_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1815_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_343_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ext_fu_373_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ext_fu_373_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1799_fu_407_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal s31cast_fu_403_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1807_1_fu_413_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1814_1_fu_339_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_i_i_i_i_fu_421_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal this_m_0_read_cast_fu_192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1814_fu_335_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1820_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1816_fu_381_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1820_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1820_fu_441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1820_2_fu_447_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1820_fu_437_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ishift_2_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1816_2_fu_389_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1828_fu_457_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_17_fu_275_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1817_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1817_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1817_fu_471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1817_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1820_fu_451_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1828_fu_457_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln1796_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_fu_491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1796_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_2_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1799_fu_407_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1817_fu_483_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln1796_1_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1796_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_3_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1807_1_fu_413_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1796_fu_503_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal bit_fu_537_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln2116_fu_544_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal bit_fu_537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln2116_fu_544_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal t_fu_549_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal t_fu_549_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln_fu_556_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln2118_fu_566_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln2118_fu_570_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal t_1_fu_580_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1_fu_588_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln2122_fu_598_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln2122_fu_602_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal t_2_fu_612_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln2_fu_620_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_fu_636_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln2126_fu_646_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_3_fu_650_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln2118_1_fu_674_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln2125_fu_681_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln2122_1_fu_688_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln2126_fu_695_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln2130_1_fu_708_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln2126_1_fu_701_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln2142_1_fu_712_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln1_fu_718_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln2142_fu_726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_666_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2142_1_fu_732_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshift_fu_742_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln3157_fu_750_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln3162_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshift_2_fu_764_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal retval_fu_775_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal retval_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln3172_fu_780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal expt_fu_759_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_fu_802_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln1795_1_fu_812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_794_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal s31_3_fu_771_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ishift_3_fu_818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1796_2_fu_824_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1796_2_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1799_1_fu_846_p0 : STD_LOGIC_VECTOR (24 downto 0);
    signal s31_3cast_fu_842_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1807_fu_851_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln1796_1_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1799_1_fu_846_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1807_fu_851_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal expt_1_fu_786_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln609_1_fu_867_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln609_1_fu_875_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_889_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_881_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_2_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_911_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln609_fu_928_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln554_1_fu_943_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln554_fu_939_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component add_float_top_adjust_9_Pipeline_VITIS_LOOP_2139_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cmp1_i_i : IN STD_LOGIC_VECTOR (0 downto 0);
        k_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        k_out_ap_vld : OUT STD_LOGIC );
    end component;


    component add_float_top_adjust_9_s_tab_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;



begin
    tab_U : component add_float_top_adjust_9_s_tab_ROM_AUTO_1R
    generic map (
        DataWidth => 3,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tab_address0,
        ce0 => tab_ce0,
        q0 => tab_q0);

    grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186 : component add_float_top_adjust_9_Pipeline_VITIS_LOOP_2139_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start,
        ap_done => grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done,
        ap_idle => grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_idle,
        ap_ready => grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_ready,
        cmp1_i_i => cmp1_i_i_reg_979,
        k_out => grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_k_out,
        k_out_ap_vld => grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_k_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_return_0_preg <= sext_ln554_1_fu_943_p1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_return_1_preg <= sext_ln554_fu_939_p1;
                end if; 
            end if;
        end if;
    end process;


    grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (tmp_16_fu_224_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_ready = ap_const_logic_1)) then 
                    grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    this_e_0_1_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln543_fu_905_p2 = ap_const_lv1_0) and (tmp_16_reg_975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                this_e_0_1_reg_161 <= ap_const_lv8_7F;
            elsif (((or_ln543_fu_905_p2 = ap_const_lv1_1) and (tmp_16_reg_975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                this_e_0_1_reg_161 <= xor_ln609_fu_932_p2;
            elsif (((ap_start = ap_const_logic_1) and (tmp_16_fu_224_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                this_e_0_1_reg_161 <= ap_const_lv8_80;
            end if; 
        end if;
    end process;

    this_m_0_1_reg_175_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln543_fu_905_p2 = ap_const_lv1_0) and (tmp_16_reg_975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                this_m_0_1_reg_175 <= select_ln548_fu_919_p3;
            elsif (((or_ln543_fu_905_p2 = ap_const_lv1_1) and (tmp_16_reg_975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                this_m_0_1_reg_175 <= select_ln609_1_fu_858_p3;
            elsif (((ap_start = ap_const_logic_1) and (tmp_16_fu_224_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                this_m_0_1_reg_175 <= select_ln609_fu_529_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_16_fu_224_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                cmp1_i_i_reg_979 <= cmp1_i_i_fu_248_p2;
                max_shift_reg_984 <= add_ln1123_fu_218_p2(30 downto 22);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln2118_reg_996 <= icmp_ln2118_fu_574_p2;
                icmp_ln2122_reg_1002 <= icmp_ln2122_fu_606_p2;
                icmp_ln2126_reg_1007 <= icmp_ln2126_fu_630_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                tmp_16_reg_975 <= add_ln609_fu_212_p2(31 downto 31);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_16_fu_224_p3, ap_CS_fsm_state2, grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (tmp_16_fu_224_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                elsif (((ap_start = ap_const_logic_1) and (tmp_16_fu_224_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln1123_fu_218_p2 <= std_logic_vector(signed(shl_ln_fu_200_p3) + signed(ap_const_lv31_20000000));
    add_ln2142_1_fu_712_p2 <= std_logic_vector(unsigned(zext_ln2130_1_fu_708_p1) + unsigned(select_ln2126_1_fu_701_p3));
    add_ln2142_fu_726_p2 <= std_logic_vector(unsigned(shl_ln1_fu_718_p3) + unsigned(ap_const_lv32_C0000000));
    add_ln609_1_fu_875_p2 <= std_logic_vector(unsigned(shl_ln609_1_fu_867_p3) + unsigned(ap_const_lv32_C0000000));
    add_ln609_fu_212_p2 <= std_logic_vector(signed(sext_ln609_1_fu_208_p1) + signed(ap_const_lv32_20000000));
    and_ln1796_1_fu_836_p2 <= (xor_ln1796_2_fu_830_p2 and icmp_ln1796_2_fu_824_p2);
    and_ln1796_2_fu_497_p2 <= (icmp_ln1796_fu_323_p2 and and_ln1796_fu_491_p2);
    and_ln1796_3_fu_523_p2 <= (tmp_17_fu_275_p3 and or_ln1796_fu_517_p2);
    and_ln1796_fu_491_p2 <= (xor_ln1796_fu_329_p2 and tmp_17_fu_275_p3);
    and_ln1817_fu_477_p2 <= (xor_ln1817_fu_471_p2 and icmp_ln1817_fu_397_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done)
    begin
        if ((grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_this_e_0_1_phi_fu_165_p6_assign_proc : process(tmp_16_reg_975, this_e_0_1_reg_161, xor_ln609_fu_932_p2, ap_CS_fsm_state3, or_ln543_fu_905_p2)
    begin
        if (((tmp_16_reg_975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
            if ((or_ln543_fu_905_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_this_e_0_1_phi_fu_165_p6 <= ap_const_lv8_7F;
            elsif ((or_ln543_fu_905_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_this_e_0_1_phi_fu_165_p6 <= xor_ln609_fu_932_p2;
            else 
                ap_phi_mux_this_e_0_1_phi_fu_165_p6 <= this_e_0_1_reg_161;
            end if;
        else 
            ap_phi_mux_this_e_0_1_phi_fu_165_p6 <= this_e_0_1_reg_161;
        end if; 
    end process;


    ap_phi_mux_this_m_0_1_phi_fu_178_p6_assign_proc : process(tmp_16_reg_975, ap_CS_fsm_state3, or_ln543_fu_905_p2, this_m_0_1_reg_175, select_ln609_1_fu_858_p3, select_ln548_fu_919_p3)
    begin
        if (((tmp_16_reg_975 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
            if ((or_ln543_fu_905_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_this_m_0_1_phi_fu_178_p6 <= select_ln548_fu_919_p3;
            elsif ((or_ln543_fu_905_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_this_m_0_1_phi_fu_178_p6 <= select_ln609_1_fu_858_p3;
            else 
                ap_phi_mux_this_m_0_1_phi_fu_178_p6 <= this_m_0_1_reg_175;
            end if;
        else 
            ap_phi_mux_this_m_0_1_phi_fu_178_p6 <= this_m_0_1_reg_175;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_CS_fsm_state3, sext_ln554_1_fu_943_p1, ap_return_0_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_return_0 <= sext_ln554_1_fu_943_p1;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state3, sext_ln554_fu_939_p1, ap_return_1_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_return_1 <= sext_ln554_fu_939_p1;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    bit_fu_537_p1 <= this_m_0_read;
    bit_fu_537_p3 <= bit_fu_537_p1(24 downto 24);
    cmp1_i_i_fu_248_p1 <= this_m_0_read;
    cmp1_i_i_fu_248_p2 <= "1" when (select_ln2137_fu_240_p3 = cmp1_i_i_fu_248_p1) else "0";
    expt_1_fu_786_p3 <= 
        ap_const_lv9_0 when (or_ln3172_fu_780_p2(0) = '1') else 
        expt_fu_759_p2;
    expt_fu_759_p2 <= std_logic_vector(unsigned(max_shift_reg_984) - unsigned(zext_ln3157_fu_750_p1));
    ext_fu_373_p1 <= this_m_0_read;
    ext_fu_373_p3 <= ext_fu_373_p1(24 downto 24);
    ext_sign_fu_232_p1 <= this_m_0_read;
    ext_sign_fu_232_p3 <= ext_sign_fu_232_p1(24 downto 24);
    grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start <= grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_start_reg;
    icmp_ln1795_1_fu_812_p2 <= "0" when (tmp_27_fu_802_p4 = ap_const_lv3_0) else "1";
    icmp_ln1795_fu_311_p2 <= "0" when (tmp_19_fu_301_p4 = ap_const_lv4_0) else "1";
    icmp_ln1796_2_fu_824_p2 <= "0" when (s31_3_fu_771_p1 = ap_const_lv5_0) else "1";
    icmp_ln1796_fu_323_p2 <= "0" when (s31_fu_289_p1 = ap_const_lv5_0) else "1";
    icmp_ln1815_fu_361_p2 <= "0" when (tmp_21_fu_351_p4 = ap_const_lv4_0) else "1";
    icmp_ln1817_fu_397_p2 <= "0" when (s31_2_fu_271_p1 = ap_const_lv5_0) else "1";
    icmp_ln2118_fu_574_p2 <= "0" when (trunc_ln_fu_556_p4 = ap_const_lv9_0) else "1";
    icmp_ln2122_fu_606_p2 <= "0" when (trunc_ln1_fu_588_p4 = ap_const_lv17_0) else "1";
    icmp_ln2126_fu_630_p2 <= "0" when (trunc_ln2_fu_620_p4 = ap_const_lv21_0) else "1";
    icmp_ln3162_fu_754_p2 <= "1" when (unsigned(zext_ln3157_fu_750_p1) > unsigned(max_shift_reg_984)) else "0";
    ishift_2_fu_367_p2 <= (tmp_20_fu_343_p3 or icmp_ln1815_fu_361_p2);
    ishift_3_fu_818_p2 <= (tmp_26_fu_794_p3 or icmp_ln1795_1_fu_812_p2);
    ishift_fu_317_p2 <= (tmp_18_fu_293_p3 or icmp_ln1795_fu_311_p2);
    lshift_2_fu_764_p3 <= 
        max_shift_reg_984 when (icmp_ln3162_fu_754_p2(0) = '1') else 
        zext_ln3157_fu_750_p1;
    lshift_fu_742_p3 <= 
        ap_const_lv5_18 when (tmp_25_fu_666_p3(0) = '1') else 
        trunc_ln2142_1_fu_732_p4;
    lshr_ln1820_fu_431_p2 <= std_logic_vector(shift_right(unsigned(this_m_0_read_cast_fu_192_p1),to_integer(unsigned('0' & zext_ln1814_fu_335_p1(31-1 downto 0)))));
    or_ln1796_fu_517_p2 <= (xor_ln1796_1_fu_511_p2 or ishift_fu_317_p2);
    or_ln1817_fu_465_p2 <= (tmp_17_fu_275_p3 or ishift_2_fu_367_p2);
    or_ln1820_fu_451_p2 <= (trunc_ln1820_fu_437_p1 or trunc_ln1820_2_fu_447_p1);
    or_ln2126_fu_695_p2 <= (select_ln2122_1_fu_688_p3 or ap_const_lv5_4);
    or_ln3172_fu_780_p2 <= (retval_fu_775_p2 or icmp_ln3162_fu_754_p2);
    or_ln543_fu_905_p2 <= (tmp_28_fu_881_p3 or retval_2_fu_899_p2);
    retval_2_fu_899_p2 <= "1" when (tmp_29_fu_889_p4 = ap_const_lv2_0) else "0";
    retval_fu_775_p0 <= this_m_0_read;
    retval_fu_775_p2 <= "1" when (retval_fu_775_p0 = ap_const_lv25_0) else "0";
    s31_2_fu_271_p1 <= value_fu_265_p2(5 - 1 downto 0);
    s31_3_fu_771_p1 <= lshift_2_fu_764_p3(5 - 1 downto 0);
    s31_3cast_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_3_fu_771_p1),25));
    s31_fu_289_p1 <= sub_ln1845_fu_283_p2(5 - 1 downto 0);
    s31cast_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_fu_289_p1),25));
    select_ln1796_fu_503_p3 <= 
        shl_ln1799_fu_407_p2 when (and_ln1796_2_fu_497_p2(0) = '1') else 
        select_ln1817_fu_483_p3;
    select_ln1807_1_fu_413_p2 <= this_m_0_read;
    select_ln1807_1_fu_413_p3 <= 
        ap_const_lv25_0 when (ishift_fu_317_p2(0) = '1') else 
        select_ln1807_1_fu_413_p2;
    select_ln1807_fu_851_p2 <= this_m_0_read;
    select_ln1807_fu_851_p3 <= 
        ap_const_lv25_0 when (ishift_3_fu_818_p2(0) = '1') else 
        select_ln1807_fu_851_p2;
    select_ln1816_2_fu_389_p3 <= 
        ap_const_lv25_1FFFFFF when (ext_fu_373_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln1816_fu_381_p3 <= 
        ap_const_lv32_FFFFFFFF when (ext_fu_373_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln1817_fu_483_p3 <= 
        or_ln1820_fu_451_p2 when (and_ln1817_fu_477_p2(0) = '1') else 
        select_ln1828_fu_457_p3;
    select_ln1828_fu_457_p2 <= this_m_0_read;
    select_ln1828_fu_457_p3 <= 
        select_ln1816_2_fu_389_p3 when (ishift_2_fu_367_p2(0) = '1') else 
        select_ln1828_fu_457_p2;
    select_ln2118_1_fu_674_p3 <= 
        ap_const_lv5_0 when (icmp_ln2118_reg_996(0) = '1') else 
        ap_const_lv5_10;
    select_ln2122_1_fu_688_p3 <= 
        select_ln2118_1_fu_674_p3 when (icmp_ln2122_reg_1002(0) = '1') else 
        select_ln2125_fu_681_p3;
    select_ln2125_fu_681_p3 <= 
        ap_const_lv5_8 when (icmp_ln2118_reg_996(0) = '1') else 
        ap_const_lv5_18;
    select_ln2126_1_fu_701_p3 <= 
        select_ln2122_1_fu_688_p3 when (icmp_ln2126_reg_1007(0) = '1') else 
        or_ln2126_fu_695_p2;
    select_ln2137_fu_240_p3 <= 
        ap_const_lv25_1FFFFFF when (ext_sign_fu_232_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln548_fu_919_p3 <= 
        ap_const_lv25_1000000 when (tmp_30_fu_911_p3(0) = '1') else 
        ap_const_lv25_FFFFFF;
    select_ln609_1_fu_858_p3 <= 
        shl_ln1799_1_fu_846_p2 when (and_ln1796_1_fu_836_p2(0) = '1') else 
        select_ln1807_fu_851_p3;
    select_ln609_fu_529_p3 <= 
        select_ln1807_1_fu_413_p3 when (and_ln1796_3_fu_523_p2(0) = '1') else 
        select_ln1796_fu_503_p3;
        sext_ln2118_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_556_p4),16));

        sext_ln2122_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_588_p4),24));

        sext_ln554_1_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_this_e_0_1_phi_fu_165_p6),32));

        sext_ln554_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ap_phi_mux_this_m_0_1_phi_fu_178_p6),32));

        sext_ln609_1_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_200_p3),32));

    sext_ln609_fu_196_p0 <= new_e_0;
        sext_ln609_fu_196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln609_fu_196_p0),10));

    shl_ln1799_1_fu_846_p0 <= this_m_0_read;
    shl_ln1799_1_fu_846_p2 <= std_logic_vector(shift_left(unsigned(shl_ln1799_1_fu_846_p0),to_integer(unsigned('0' & s31_3cast_fu_842_p1(25-1 downto 0)))));
    shl_ln1799_fu_407_p0 <= this_m_0_read;
    shl_ln1799_fu_407_p2 <= std_logic_vector(shift_left(unsigned(shl_ln1799_fu_407_p0),to_integer(unsigned('0' & s31cast_fu_403_p1(25-1 downto 0)))));
    shl_ln1820_fu_441_p2 <= std_logic_vector(shift_left(unsigned(select_ln1816_fu_381_p3),to_integer(unsigned('0' & zext_ln1820_fu_427_p1(31-1 downto 0)))));
    shl_ln1_fu_718_p3 <= (add_ln2142_1_fu_712_p2 & ap_const_lv27_0);
    shl_ln609_1_fu_867_p3 <= (expt_1_fu_786_p3 & ap_const_lv23_0);
    shl_ln_fu_200_p1 <= new_e_0;
    shl_ln_fu_200_p3 <= (shl_ln_fu_200_p1 & ap_const_lv22_0);
    sub_i_i_i_i_fu_421_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(zext_ln1814_1_fu_339_p1));
    sub_ln1845_fu_283_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(value_fu_265_p2));
    t_1_fu_580_p3 <= 
        zext_ln2118_fu_570_p1 when (icmp_ln2118_fu_574_p2(0) = '1') else 
        t_fu_549_p3;
    t_2_fu_612_p3 <= 
        zext_ln2122_fu_602_p1 when (icmp_ln2122_fu_606_p2(0) = '1') else 
        t_1_fu_580_p3;
    t_3_fu_650_p3 <= 
        tmp_fu_636_p4 when (icmp_ln2126_fu_630_p2(0) = '1') else 
        trunc_ln2126_fu_646_p1;
    t_fu_549_p2 <= this_m_0_read;
    t_fu_549_p3 <= 
        xor_ln2116_fu_544_p2 when (bit_fu_537_p3(0) = '1') else 
        t_fu_549_p2;
    tab_address0 <= zext_ln2130_fu_658_p1(4 - 1 downto 0);

    tab_ce0_assign_proc : process(ap_CS_fsm_state2, grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done)
    begin
        if (((grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            tab_ce0 <= ap_const_logic_1;
        else 
            tab_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    this_m_0_read_cast_fu_192_p0 <= this_m_0_read;
        this_m_0_read_cast_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(this_m_0_read_cast_fu_192_p0),32));

    tmp_16_fu_224_p3 <= add_ln609_fu_212_p2(31 downto 31);
    tmp_17_fu_275_p3 <= value_fu_265_p2(9 downto 9);
    tmp_18_fu_293_p3 <= sub_ln1845_fu_283_p2(5 downto 5);
    tmp_19_fu_301_p4 <= sub_ln1845_fu_283_p2(9 downto 6);
    tmp_20_fu_343_p3 <= value_fu_265_p2(5 downto 5);
    tmp_21_fu_351_p4 <= value_fu_265_p2(9 downto 6);
    tmp_25_fu_666_p3 <= grp_adjust_9_Pipeline_VITIS_LOOP_2139_1_fu_186_k_out(31 downto 31);
    tmp_26_fu_794_p3 <= lshift_2_fu_764_p3(5 downto 5);
    tmp_27_fu_802_p4 <= lshift_2_fu_764_p3(8 downto 6);
    tmp_28_fu_881_p3 <= add_ln609_1_fu_875_p2(31 downto 31);
    tmp_29_fu_889_p4 <= add_ln609_1_fu_875_p2(31 downto 30);
    tmp_30_fu_911_p3 <= select_ln609_1_fu_858_p3(24 downto 24);
    tmp_fu_636_p4 <= t_2_fu_612_p3(7 downto 4);
    trunc_ln1820_2_fu_447_p1 <= shl_ln1820_fu_441_p2(25 - 1 downto 0);
    trunc_ln1820_fu_437_p1 <= lshr_ln1820_fu_431_p2(25 - 1 downto 0);
    trunc_ln1_fu_588_p4 <= t_1_fu_580_p3(24 downto 8);
    trunc_ln2126_fu_646_p1 <= t_2_fu_612_p3(4 - 1 downto 0);
    trunc_ln2142_1_fu_732_p4 <= add_ln2142_fu_726_p2(31 downto 27);
    trunc_ln2_fu_620_p4 <= t_2_fu_612_p3(24 downto 4);
    trunc_ln609_fu_928_p1 <= expt_1_fu_786_p3(8 - 1 downto 0);
    trunc_ln_fu_556_p4 <= t_fu_549_p3(24 downto 16);
    value_fu_265_p2 <= std_logic_vector(signed(ap_const_lv10_380) - signed(sext_ln609_fu_196_p1));
    xor_ln1796_1_fu_511_p2 <= (icmp_ln1796_fu_323_p2 xor ap_const_lv1_1);
    xor_ln1796_2_fu_830_p2 <= (ishift_3_fu_818_p2 xor ap_const_lv1_1);
    xor_ln1796_fu_329_p2 <= (ishift_fu_317_p2 xor ap_const_lv1_1);
    xor_ln1817_fu_471_p2 <= (or_ln1817_fu_465_p2 xor ap_const_lv1_1);
    xor_ln2116_fu_544_p0 <= this_m_0_read;
    xor_ln2116_fu_544_p2 <= (xor_ln2116_fu_544_p0 xor ap_const_lv25_1FFFFFF);
    xor_ln609_fu_932_p2 <= (trunc_ln609_fu_928_p1 xor ap_const_lv8_80);
    zext_ln1814_1_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_2_fu_271_p1),6));
    zext_ln1814_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_2_fu_271_p1),32));
    zext_ln1820_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_i_i_i_i_fu_421_p2),32));
    zext_ln2118_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2118_fu_566_p1),25));
    zext_ln2122_fu_602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln2122_fu_598_p1),25));
    zext_ln2130_1_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tab_q0),5));
    zext_ln2130_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_3_fu_650_p3),64));
    zext_ln3157_fu_750_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshift_fu_742_p3),9));
end behav;
