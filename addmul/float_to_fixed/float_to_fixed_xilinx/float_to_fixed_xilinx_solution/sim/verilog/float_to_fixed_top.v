// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="float_to_fixed_top_float_to_fixed_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=50.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.830500,HLS_SYN_LAT=23,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=437,HLS_SYN_LUT=2359,HLS_VERSION=2021_2}" *)

module float_to_fixed_top (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        flopo,
        fixpo,
        fixpo_ap_vld
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] flopo;
output  [63:0] fixpo;
output   fixpo_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fixpo_ap_vld;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] r_v_v_q0;
reg   [31:0] reg_272;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg   [0:0] lw_9_reg_883;
wire    ap_CS_fsm_state6;
reg   [7:0] op2_assign_reg_891;
reg   [4:0] s31_1_reg_896;
reg   [0:0] tmp_5_reg_903;
reg  signed [2:0] ishift_reg_911;
wire   [31:0] select_ln1889_fu_327_p3;
reg   [31:0] select_ln1889_reg_918;
wire    ap_CS_fsm_state7;
wire   [4:0] s31_fu_345_p1;
reg   [4:0] s31_reg_925;
wire    ap_CS_fsm_state9;
wire  signed [3:0] trunc_ln_fu_349_p4;
reg  signed [3:0] trunc_ln_reg_932;
wire  signed [3:0] sext_ln1795_fu_375_p1;
reg  signed [3:0] sext_ln1795_reg_943;
wire    ap_CS_fsm_state10;
reg   [31:0] hw_1_reg_954;
wire   [27:0] zext_ln1815_fu_397_p1;
reg   [27:0] zext_ln1815_reg_967;
wire   [0:0] icmp_ln1820_fu_407_p2;
reg   [0:0] icmp_ln1820_reg_972;
wire   [31:0] r_v_v_q1;
reg   [31:0] lw_5_reg_986;
wire   [0:0] icmp_ln1799_fu_423_p2;
reg   [0:0] icmp_ln1799_reg_993;
reg   [8:0] tmp_1_reg_1003;
wire   [31:0] zext_ln1814_fu_450_p1;
reg   [31:0] zext_ln1814_reg_1009;
wire   [0:0] icmp_ln1817_fu_456_p2;
reg   [0:0] icmp_ln1817_reg_1014;
wire   [31:0] zext_ln511_fu_467_p1;
reg   [31:0] zext_ln511_reg_1019;
reg   [31:0] hw_2_reg_1029;
wire   [0:0] icmp_ln1820_1_fu_512_p2;
reg   [0:0] icmp_ln1820_1_reg_1035;
wire   [31:0] or_ln1820_fu_540_p2;
reg   [31:0] or_ln1820_reg_1045;
wire   [0:0] and_ln1817_fu_546_p2;
reg   [0:0] and_ln1817_reg_1050;
wire   [8:0] select_ln1817_fu_561_p3;
reg   [8:0] select_ln1817_reg_1056;
wire   [31:0] zext_ln1794_fu_575_p1;
reg   [31:0] zext_ln1794_reg_1061;
wire    ap_CS_fsm_state13;
wire   [31:0] zext_ln1799_fu_592_p1;
reg   [31:0] zext_ln1799_reg_1066;
wire   [0:0] or_ln1796_fu_704_p2;
reg   [0:0] or_ln1796_reg_1076;
wire   [0:0] and_ln1828_1_fu_719_p2;
reg   [0:0] and_ln1828_1_reg_1081;
wire   [0:0] and_ln1796_fu_729_p2;
reg   [0:0] and_ln1796_reg_1086;
wire   [22:0] select_ln1796_3_fu_772_p3;
reg   [22:0] select_ln1796_3_reg_1091;
wire   [31:0] select_ln1796_5_fu_800_p3;
reg   [31:0] select_ln1796_5_reg_1096;
reg   [3:0] r_v_v_address0;
reg    r_v_v_ce0;
reg    r_v_v_we0;
reg   [31:0] r_v_v_d0;
reg   [3:0] r_v_v_address1;
reg    r_v_v_ce1;
reg    r_v_v_we1;
reg   [31:0] r_v_v_d1;
wire    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start;
wire    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done;
wire    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_idle;
wire    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_ready;
wire   [3:0] grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_address0;
wire    grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_ce0;
wire    grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_we0;
wire   [31:0] grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_d0;
reg    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln513_fu_365_p1;
wire   [63:0] zext_ln513_3_fu_378_p1;
wire   [63:0] zext_ln513_5_fu_389_p1;
wire   [63:0] zext_ln513_4_fu_418_p1;
wire   [63:0] zext_ln513_1_fu_428_p1;
wire   [63:0] zext_ln513_6_fu_493_p1;
wire   [63:0] zext_ln513_2_fu_518_p1;
wire   [63:0] zext_ln513_7_fu_601_p1;
wire    ap_CS_fsm_state14;
wire   [31:0] trunc_ln629_fu_276_p1;
wire  signed [8:0] sext_ln2476_fu_336_p1;
wire   [8:0] sub_ln1836_fu_339_p2;
wire   [3:0] add_ln1820_1_fu_359_p2;
wire   [3:0] add_ln1820_fu_370_p2;
wire   [3:0] sub_ln1807_1_fu_383_p2;
wire  signed [26:0] sext_ln1815_fu_394_p1;
wire   [27:0] add_ln1820_2_fu_401_p2;
wire   [2:0] sub_ln1807_fu_413_p2;
wire   [5:0] zext_ln1814_1_fu_453_p1;
wire   [5:0] sub_i_i_i_i_i_fu_461_p2;
wire   [31:0] shl_ln1820_fu_477_p2;
wire   [31:0] lshr_ln1820_fu_471_p2;
wire   [3:0] sub_ln1807_2_fu_488_p2;
wire   [27:0] add_ln1820_3_fu_507_p2;
wire   [30:0] trunc_ln1820_fu_498_p1;
wire   [30:0] select_ln1164_1_fu_443_p3;
wire   [30:0] select_ln1820_fu_523_p3;
wire   [31:0] zext_ln1820_fu_530_p1;
wire   [31:0] lshr_ln1820_1_fu_502_p2;
wire   [31:0] shl_ln1820_1_fu_534_p2;
wire   [31:0] or_ln1820_1_fu_482_p2;
wire   [8:0] tmp_2_fu_551_p4;
wire   [5:0] zext_ln1794_1_fu_578_p1;
wire   [5:0] sub6_i_i_i_i_i_fu_586_p2;
wire   [3:0] sub_ln1799_fu_596_p2;
wire   [31:0] shl_ln1799_1_fu_606_p2;
wire   [31:0] lshr_ln1799_1_fu_611_p2;
wire   [31:0] shl_ln1799_2_fu_623_p2;
wire   [31:0] lshr_ln1799_2_fu_633_p2;
wire   [22:0] trunc_ln1799_fu_629_p1;
wire   [22:0] trunc_ln1799_1_fu_638_p1;
wire   [0:0] and_ln1820_fu_657_p2;
wire   [21:0] trunc_ln1820_1_fu_648_p1;
wire   [21:0] select_ln1164_fu_568_p3;
wire   [21:0] select_ln1820_2_fu_661_p3;
wire   [21:0] hw_5_fu_669_p3;
wire   [31:0] lw_7_fu_652_p3;
wire   [31:0] lshr_ln1820_2_fu_680_p2;
wire   [31:0] zext_ln1820_1_fu_676_p1;
wire   [31:0] shl_ln1820_2_fu_689_p2;
wire   [22:0] trunc_ln1820_3_fu_694_p1;
wire   [22:0] trunc_ln1820_2_fu_685_p1;
wire   [0:0] icmp_ln1796_fu_581_p2;
wire   [0:0] xor_ln1817_fu_709_p2;
wire   [0:0] and_ln1828_fu_714_p2;
wire   [0:0] xor_ln1835_fu_724_p2;
wire   [22:0] or_ln1820_2_fu_698_p2;
wire   [22:0] select_ln1164_2_fu_742_p3;
wire   [22:0] select_ln1817_1_fu_749_p3;
wire   [22:0] or_ln1799_2_fu_642_p2;
wire   [22:0] trunc_ln1911_1_fu_739_p1;
wire   [22:0] select_ln1796_2_fu_756_p3;
wire   [22:0] trunc_ln1911_fu_735_p1;
wire   [22:0] select_ln1828_1_fu_764_p3;
wire   [31:0] select_ln1817_2_fu_780_p3;
wire   [31:0] or_ln1799_1_fu_617_p2;
wire   [31:0] select_ln1796_4_fu_785_p3;
wire   [31:0] select_ln1828_2_fu_793_p3;
wire   [31:0] hw_3_fu_807_p3;
wire   [31:0] shl_ln1799_fu_814_p2;
wire   [31:0] lshr_ln1799_fu_819_p2;
wire   [31:0] or_ln1799_fu_824_p2;
wire   [8:0] tmp_4_fu_840_p4;
wire   [8:0] select_ln1796_fu_850_p3;
wire   [8:0] tmp_fu_830_p4;
wire   [8:0] select_ln1828_fu_856_p3;
wire   [8:0] select_ln1796_1_fu_862_p3;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg = 1'b0;
end

float_to_fixed_top_r_v_v_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
r_v_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(r_v_v_address0),
    .ce0(r_v_v_ce0),
    .we0(r_v_v_we0),
    .d0(r_v_v_d0),
    .q0(r_v_v_q0),
    .address1(r_v_v_address1),
    .ce1(r_v_v_ce1),
    .we1(r_v_v_we1),
    .d1(r_v_v_d1),
    .q1(r_v_v_q1)
);

float_to_fixed_top_float_to_fixed_top_Pipeline_1 grp_float_to_fixed_top_Pipeline_1_fu_267(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start),
    .ap_done(grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done),
    .ap_idle(grp_float_to_fixed_top_Pipeline_1_fu_267_ap_idle),
    .ap_ready(grp_float_to_fixed_top_Pipeline_1_fu_267_ap_ready),
    .r_v_v_address0(grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_address0),
    .r_v_v_ce0(grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_ce0),
    .r_v_v_we0(grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_we0),
    .r_v_v_d0(grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg <= 1'b1;
        end else if ((grp_float_to_fixed_top_Pipeline_1_fu_267_ap_ready == 1'b1)) begin
            grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        and_ln1796_reg_1086 <= and_ln1796_fu_729_p2;
        and_ln1828_1_reg_1081 <= and_ln1828_1_fu_719_p2;
        or_ln1796_reg_1076 <= or_ln1796_fu_704_p2;
        select_ln1796_3_reg_1091 <= select_ln1796_3_fu_772_p3;
        select_ln1796_5_reg_1096 <= select_ln1796_5_fu_800_p3;
        zext_ln1794_reg_1061[4 : 0] <= zext_ln1794_fu_575_p1[4 : 0];
        zext_ln1799_reg_1066[5 : 0] <= zext_ln1799_fu_592_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        and_ln1817_reg_1050 <= and_ln1817_fu_546_p2;
        hw_2_reg_1029 <= r_v_v_q1;
        icmp_ln1817_reg_1014 <= icmp_ln1817_fu_456_p2;
        or_ln1820_reg_1045 <= or_ln1820_fu_540_p2;
        select_ln1817_reg_1056 <= select_ln1817_fu_561_p3;
        zext_ln1814_reg_1009[4 : 0] <= zext_ln1814_fu_450_p1[4 : 0];
        zext_ln511_reg_1019[5 : 0] <= zext_ln511_fu_467_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        hw_1_reg_954 <= r_v_v_q0;
        sext_ln1795_reg_943 <= sext_ln1795_fu_375_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln1799_reg_993 <= icmp_ln1799_fu_423_p2;
        icmp_ln1820_reg_972 <= icmp_ln1820_fu_407_p2;
        lw_5_reg_986 <= r_v_v_q1;
        tmp_1_reg_1003 <= {{r_v_v_q0[31:23]}};
        zext_ln1815_reg_967[26 : 0] <= zext_ln1815_fu_397_p1[26 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln1820_reg_972 == 1'd1))) begin
        icmp_ln1820_1_reg_1035 <= icmp_ln1820_1_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ishift_reg_911 <= {{flopo[71:69]}};
        lw_9_reg_883 <= flopo[32'd31];
        op2_assign_reg_891 <= {{flopo[71:64]}};
        s31_1_reg_896 <= {{flopo[68:64]}};
        tmp_5_reg_903 <= flopo[32'd71];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_272 <= r_v_v_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        s31_reg_925 <= s31_fu_345_p1;
        trunc_ln_reg_932 <= {{sub_ln1836_fu_339_p2[8:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        select_ln1889_reg_918 <= select_ln1889_fu_327_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fixpo_ap_vld = 1'b1;
    end else begin
        fixpo_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        r_v_v_address0 = zext_ln513_6_fu_493_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_v_v_address0 = zext_ln513_4_fu_418_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_v_v_address0 = zext_ln513_3_fu_378_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        r_v_v_address0 = zext_ln513_fu_365_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_v_v_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_v_v_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_v_v_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_v_v_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        r_v_v_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_v_v_address0 = grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_address0;
    end else begin
        r_v_v_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_v_v_address1 = zext_ln513_7_fu_601_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        r_v_v_address1 = zext_ln513_2_fu_518_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        r_v_v_address1 = zext_ln513_1_fu_428_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        r_v_v_address1 = zext_ln513_5_fu_389_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        r_v_v_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_v_v_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_v_v_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        r_v_v_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        r_v_v_address1 = 64'd0;
    end else begin
        r_v_v_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        r_v_v_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_v_v_ce0 = grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_ce0;
    end else begin
        r_v_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state13))) begin
        r_v_v_ce1 = 1'b1;
    end else begin
        r_v_v_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        r_v_v_d0 = select_ln1889_reg_918;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_v_v_d0 = select_ln1889_fu_327_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        r_v_v_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_v_v_d0 = grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_d0;
    end else begin
        r_v_v_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        r_v_v_d1 = select_ln1889_reg_918;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        r_v_v_d1 = select_ln1889_fu_327_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        r_v_v_d1 = trunc_ln629_fu_276_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        r_v_v_d1 = 32'd0;
    end else begin
        r_v_v_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        r_v_v_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        r_v_v_we0 = grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_we0;
    end else begin
        r_v_v_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        r_v_v_we1 = 1'b1;
    end else begin
        r_v_v_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1820_1_fu_359_p2 = ($signed(trunc_ln_fu_349_p4) + $signed(4'd4));

assign add_ln1820_2_fu_401_p2 = (zext_ln1815_fu_397_p1 + 28'd5);

assign add_ln1820_3_fu_507_p2 = (zext_ln1815_reg_967 + 28'd6);

assign add_ln1820_fu_370_p2 = ($signed(trunc_ln_reg_932) + $signed(4'd3));

assign and_ln1796_fu_729_p2 = (xor_ln1835_fu_724_p2 & icmp_ln1796_fu_581_p2);

assign and_ln1817_fu_546_p2 = (tmp_5_reg_903 & icmp_ln1817_fu_456_p2);

assign and_ln1820_fu_657_p2 = (icmp_ln1820_reg_972 & icmp_ln1820_1_reg_1035);

assign and_ln1828_1_fu_719_p2 = (tmp_5_reg_903 & and_ln1828_fu_714_p2);

assign and_ln1828_fu_714_p2 = (xor_ln1817_fu_709_p2 & icmp_ln1820_reg_972);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign fixpo = {{{select_ln1796_3_reg_1091}, {select_ln1796_5_reg_1096}}, {select_ln1796_1_fu_862_p3}};

assign grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start = grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg;

assign hw_3_fu_807_p3 = ((icmp_ln1799_reg_993[0:0] == 1'b1) ? r_v_v_q1 : 32'd0);

assign hw_5_fu_669_p3 = ((icmp_ln1820_reg_972[0:0] == 1'b1) ? select_ln1820_2_fu_661_p3 : select_ln1164_fu_568_p3);

assign icmp_ln1796_fu_581_p2 = ((s31_1_reg_896 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln1799_fu_423_p2 = ((ishift_reg_911 < 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln1817_fu_456_p2 = ((s31_reg_925 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln1820_1_fu_512_p2 = ((add_ln1820_3_fu_507_p2 < 28'd9) ? 1'b1 : 1'b0);

assign icmp_ln1820_fu_407_p2 = ((add_ln1820_2_fu_401_p2 < 28'd9) ? 1'b1 : 1'b0);

assign lshr_ln1799_1_fu_611_p2 = reg_272 >> zext_ln1799_fu_592_p1;

assign lshr_ln1799_2_fu_633_p2 = lw_5_reg_986 >> zext_ln1799_fu_592_p1;

assign lshr_ln1799_fu_819_p2 = hw_3_fu_807_p3 >> zext_ln1799_reg_1066;

assign lshr_ln1820_1_fu_502_p2 = hw_1_reg_954 >> zext_ln1814_fu_450_p1;

assign lshr_ln1820_2_fu_680_p2 = lw_7_fu_652_p3 >> zext_ln1814_reg_1009;

assign lshr_ln1820_fu_471_p2 = reg_272 >> zext_ln1814_fu_450_p1;

assign lw_7_fu_652_p3 = ((icmp_ln1820_reg_972[0:0] == 1'b1) ? hw_2_reg_1029 : select_ln1889_reg_918);

assign or_ln1796_fu_704_p2 = (tmp_5_reg_903 | icmp_ln1796_fu_581_p2);

assign or_ln1799_1_fu_617_p2 = (shl_ln1799_1_fu_606_p2 | lshr_ln1799_1_fu_611_p2);

assign or_ln1799_2_fu_642_p2 = (trunc_ln1799_fu_629_p1 | trunc_ln1799_1_fu_638_p1);

assign or_ln1799_fu_824_p2 = (shl_ln1799_fu_814_p2 | lshr_ln1799_fu_819_p2);

assign or_ln1820_1_fu_482_p2 = (shl_ln1820_fu_477_p2 | lshr_ln1820_fu_471_p2);

assign or_ln1820_2_fu_698_p2 = (trunc_ln1820_3_fu_694_p1 | trunc_ln1820_2_fu_685_p1);

assign or_ln1820_fu_540_p2 = (shl_ln1820_1_fu_534_p2 | lshr_ln1820_1_fu_502_p2);

assign s31_fu_345_p1 = sub_ln1836_fu_339_p2[4:0];

assign select_ln1164_1_fu_443_p3 = ((lw_9_reg_883[0:0] == 1'b1) ? 31'd2147483647 : 31'd0);

assign select_ln1164_2_fu_742_p3 = ((lw_9_reg_883[0:0] == 1'b1) ? 23'd8388607 : 23'd0);

assign select_ln1164_fu_568_p3 = ((lw_9_reg_883[0:0] == 1'b1) ? 22'd4194303 : 22'd0);

assign select_ln1796_1_fu_862_p3 = ((and_ln1796_reg_1086[0:0] == 1'b1) ? tmp_fu_830_p4 : select_ln1828_fu_856_p3);

assign select_ln1796_2_fu_756_p3 = ((or_ln1796_fu_704_p2[0:0] == 1'b1) ? select_ln1817_1_fu_749_p3 : or_ln1799_2_fu_642_p2);

assign select_ln1796_3_fu_772_p3 = ((and_ln1796_fu_729_p2[0:0] == 1'b1) ? trunc_ln1911_fu_735_p1 : select_ln1828_1_fu_764_p3);

assign select_ln1796_4_fu_785_p3 = ((or_ln1796_fu_704_p2[0:0] == 1'b1) ? select_ln1817_2_fu_780_p3 : or_ln1799_1_fu_617_p2);

assign select_ln1796_5_fu_800_p3 = ((and_ln1796_fu_729_p2[0:0] == 1'b1) ? lw_5_reg_986 : select_ln1828_2_fu_793_p3);

assign select_ln1796_fu_850_p3 = ((or_ln1796_reg_1076[0:0] == 1'b1) ? select_ln1817_reg_1056 : tmp_4_fu_840_p4);

assign select_ln1817_1_fu_749_p3 = ((and_ln1817_reg_1050[0:0] == 1'b1) ? or_ln1820_2_fu_698_p2 : select_ln1164_2_fu_742_p3);

assign select_ln1817_2_fu_780_p3 = ((and_ln1817_reg_1050[0:0] == 1'b1) ? or_ln1820_reg_1045 : hw_1_reg_954);

assign select_ln1817_fu_561_p3 = ((and_ln1817_fu_546_p2[0:0] == 1'b1) ? tmp_2_fu_551_p4 : tmp_1_reg_1003);

assign select_ln1820_2_fu_661_p3 = ((and_ln1820_fu_657_p2[0:0] == 1'b1) ? trunc_ln1820_1_fu_648_p1 : select_ln1164_fu_568_p3);

assign select_ln1820_fu_523_p3 = ((icmp_ln1820_reg_972[0:0] == 1'b1) ? trunc_ln1820_fu_498_p1 : select_ln1164_1_fu_443_p3);

assign select_ln1828_1_fu_764_p3 = ((and_ln1828_1_fu_719_p2[0:0] == 1'b1) ? trunc_ln1911_1_fu_739_p1 : select_ln1796_2_fu_756_p3);

assign select_ln1828_2_fu_793_p3 = ((and_ln1828_1_fu_719_p2[0:0] == 1'b1) ? hw_1_reg_954 : select_ln1796_4_fu_785_p3);

assign select_ln1828_fu_856_p3 = ((and_ln1828_1_reg_1081[0:0] == 1'b1) ? tmp_1_reg_1003 : select_ln1796_fu_850_p3);

assign select_ln1889_fu_327_p3 = ((lw_9_reg_883[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign sext_ln1795_fu_375_p1 = ishift_reg_911;

assign sext_ln1815_fu_394_p1 = trunc_ln_reg_932;

assign sext_ln2476_fu_336_p1 = $signed(op2_assign_reg_891);

assign shl_ln1799_1_fu_606_p2 = lw_5_reg_986 << zext_ln1794_fu_575_p1;

assign shl_ln1799_2_fu_623_p2 = r_v_v_q0 << zext_ln1794_fu_575_p1;

assign shl_ln1799_fu_814_p2 = reg_272 << zext_ln1794_reg_1061;

assign shl_ln1820_1_fu_534_p2 = zext_ln1820_fu_530_p1 << zext_ln511_fu_467_p1;

assign shl_ln1820_2_fu_689_p2 = zext_ln1820_1_fu_676_p1 << zext_ln511_reg_1019;

assign shl_ln1820_fu_477_p2 = hw_1_reg_954 << zext_ln511_fu_467_p1;

assign sub6_i_i_i_i_i_fu_586_p2 = ($signed(6'd32) - $signed(zext_ln1794_1_fu_578_p1));

assign sub_i_i_i_i_i_fu_461_p2 = ($signed(6'd32) - $signed(zext_ln1814_1_fu_453_p1));

assign sub_ln1799_fu_596_p2 = ($signed(4'd2) - $signed(sext_ln1795_reg_943));

assign sub_ln1807_1_fu_383_p2 = ($signed(4'd4) - $signed(sext_ln1795_fu_375_p1));

assign sub_ln1807_2_fu_488_p2 = ($signed(4'd5) - $signed(sext_ln1795_reg_943));

assign sub_ln1807_fu_413_p2 = ($signed(3'd3) - $signed(ishift_reg_911));

assign sub_ln1836_fu_339_p2 = ($signed(9'd0) - $signed(sext_ln2476_fu_336_p1));

assign tmp_2_fu_551_p4 = {{or_ln1820_1_fu_482_p2[31:23]}};

assign tmp_4_fu_840_p4 = {{or_ln1799_fu_824_p2[31:23]}};

assign tmp_fu_830_p4 = {{reg_272[31:23]}};

assign trunc_ln1799_1_fu_638_p1 = lshr_ln1799_2_fu_633_p2[22:0];

assign trunc_ln1799_fu_629_p1 = shl_ln1799_2_fu_623_p2[22:0];

assign trunc_ln1820_1_fu_648_p1 = r_v_v_q1[21:0];

assign trunc_ln1820_2_fu_685_p1 = lshr_ln1820_2_fu_680_p2[22:0];

assign trunc_ln1820_3_fu_694_p1 = shl_ln1820_2_fu_689_p2[22:0];

assign trunc_ln1820_fu_498_p1 = r_v_v_q1[30:0];

assign trunc_ln1911_1_fu_739_p1 = hw_2_reg_1029[22:0];

assign trunc_ln1911_fu_735_p1 = r_v_v_q0[22:0];

assign trunc_ln629_fu_276_p1 = flopo[31:0];

assign trunc_ln_fu_349_p4 = {{sub_ln1836_fu_339_p2[8:5]}};

assign xor_ln1817_fu_709_p2 = (icmp_ln1817_reg_1014 ^ 1'd1);

assign xor_ln1835_fu_724_p2 = (tmp_5_reg_903 ^ 1'd1);

assign zext_ln1794_1_fu_578_p1 = s31_1_reg_896;

assign zext_ln1794_fu_575_p1 = s31_1_reg_896;

assign zext_ln1799_fu_592_p1 = sub6_i_i_i_i_i_fu_586_p2;

assign zext_ln1814_1_fu_453_p1 = s31_reg_925;

assign zext_ln1814_fu_450_p1 = s31_reg_925;

assign zext_ln1815_fu_397_p1 = $unsigned(sext_ln1815_fu_394_p1);

assign zext_ln1820_1_fu_676_p1 = hw_5_fu_669_p3;

assign zext_ln1820_fu_530_p1 = select_ln1820_fu_523_p3;

assign zext_ln511_fu_467_p1 = sub_i_i_i_i_i_fu_461_p2;

assign zext_ln513_1_fu_428_p1 = add_ln1820_2_fu_401_p2;

assign zext_ln513_2_fu_518_p1 = add_ln1820_3_fu_507_p2;

assign zext_ln513_3_fu_378_p1 = add_ln1820_fu_370_p2;

assign zext_ln513_4_fu_418_p1 = sub_ln1807_fu_413_p2;

assign zext_ln513_5_fu_389_p1 = sub_ln1807_1_fu_383_p2;

assign zext_ln513_6_fu_493_p1 = sub_ln1807_2_fu_488_p2;

assign zext_ln513_7_fu_601_p1 = sub_ln1799_fu_596_p2;

assign zext_ln513_fu_365_p1 = add_ln1820_1_fu_359_p2;

always @ (posedge ap_clk) begin
    zext_ln1815_reg_967[27] <= 1'b0;
    zext_ln1814_reg_1009[31:5] <= 27'b000000000000000000000000000;
    zext_ln511_reg_1019[31:6] <= 26'b00000000000000000000000000;
    zext_ln1794_reg_1061[31:5] <= 27'b000000000000000000000000000;
    zext_ln1799_reg_1066[31:6] <= 26'b00000000000000000000000000;
end

endmodule //float_to_fixed_top
