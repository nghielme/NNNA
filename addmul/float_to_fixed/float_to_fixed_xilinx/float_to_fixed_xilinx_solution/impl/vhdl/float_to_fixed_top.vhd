-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity float_to_fixed_top is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    flopo : IN STD_LOGIC_VECTOR (127 downto 0);
    fixpo : OUT STD_LOGIC_VECTOR (63 downto 0);
    fixpo_ap_vld : OUT STD_LOGIC );
end;


architecture behav of float_to_fixed_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "float_to_fixed_top_float_to_fixed_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=50.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.830500,HLS_SYN_LAT=23,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=437,HLS_SYN_LUT=2359,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv28_5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000101";
    constant ap_const_lv28_9 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv28_6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000110";
    constant ap_const_lv22_3FFFFF : STD_LOGIC_VECTOR (21 downto 0) := "1111111111111111111111";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv23_7FFFFF : STD_LOGIC_VECTOR (22 downto 0) := "11111111111111111111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal r_v_v_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal lw_9_reg_883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal op2_assign_reg_891 : STD_LOGIC_VECTOR (7 downto 0);
    signal s31_1_reg_896 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_reg_903 : STD_LOGIC_VECTOR (0 downto 0);
    signal ishift_reg_911 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1889_fu_327_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1889_reg_918 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal s31_fu_345_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal s31_reg_925 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln_fu_349_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln_reg_932 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1795_fu_375_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1795_reg_943 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal hw_1_reg_954 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1815_fu_397_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln1815_reg_967 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln1820_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1820_reg_972 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_v_v_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lw_5_reg_986 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1799_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1799_reg_993 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1003 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1814_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1814_reg_1009 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1817_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1817_reg_1014 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln511_fu_467_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln511_reg_1019 : STD_LOGIC_VECTOR (31 downto 0);
    signal hw_2_reg_1029 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1820_1_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1820_1_reg_1035 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1820_fu_540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1820_reg_1045 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln1817_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1817_reg_1050 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1817_fu_561_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1817_reg_1056 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1794_fu_575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1794_reg_1061 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln1799_fu_592_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1799_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1796_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1796_reg_1076 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1828_1_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1828_1_reg_1081 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_reg_1086 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1796_3_fu_772_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1796_3_reg_1091 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1796_5_fu_800_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1796_5_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_v_v_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_v_v_ce0 : STD_LOGIC;
    signal r_v_v_we0 : STD_LOGIC;
    signal r_v_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_v_v_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_v_v_ce1 : STD_LOGIC;
    signal r_v_v_we1 : STD_LOGIC;
    signal r_v_v_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start : STD_LOGIC;
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done : STD_LOGIC;
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_ap_idle : STD_LOGIC;
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_ap_ready : STD_LOGIC;
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_ce0 : STD_LOGIC;
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_we0 : STD_LOGIC;
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln513_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_3_fu_378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_5_fu_389_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_4_fu_418_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_1_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_6_fu_493_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_2_fu_518_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln513_7_fu_601_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal trunc_ln629_fu_276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln2476_fu_336_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1836_fu_339_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1820_1_fu_359_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln1820_fu_370_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln1807_1_fu_383_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1815_fu_394_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln1820_2_fu_401_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal sub_ln1807_fu_413_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1814_1_fu_453_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_i_i_i_i_i_fu_461_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln1820_fu_477_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1820_fu_471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1807_2_fu_488_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln1820_3_fu_507_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln1820_fu_498_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln1164_1_fu_443_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln1820_fu_523_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln1820_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1820_1_fu_502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1820_1_fu_534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1820_1_fu_482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_551_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1794_1_fu_578_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub6_i_i_i_i_i_fu_586_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln1799_fu_596_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln1799_1_fu_606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1799_1_fu_611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1799_2_fu_623_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1799_2_fu_633_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1799_fu_629_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1799_1_fu_638_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal and_ln1820_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1820_1_fu_648_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln1164_fu_568_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal select_ln1820_2_fu_661_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal hw_5_fu_669_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal lw_7_fu_652_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1820_2_fu_680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1820_1_fu_676_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1820_2_fu_689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1820_3_fu_694_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1820_2_fu_685_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln1796_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1817_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1828_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1835_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1820_2_fu_698_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1164_2_fu_742_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1817_1_fu_749_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln1799_2_fu_642_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1911_1_fu_739_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1796_2_fu_756_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1911_fu_735_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1828_1_fu_764_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal select_ln1817_2_fu_780_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1799_1_fu_617_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1796_4_fu_785_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1828_2_fu_793_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal hw_3_fu_807_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1799_fu_814_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1799_fu_819_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1799_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_840_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1796_fu_850_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_830_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1828_fu_856_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln1796_1_fu_862_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component float_to_fixed_top_float_to_fixed_top_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        r_v_v_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        r_v_v_ce0 : OUT STD_LOGIC;
        r_v_v_we0 : OUT STD_LOGIC;
        r_v_v_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component float_to_fixed_top_r_v_v_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    r_v_v_U : component float_to_fixed_top_r_v_v_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => r_v_v_address0,
        ce0 => r_v_v_ce0,
        we0 => r_v_v_we0,
        d0 => r_v_v_d0,
        q0 => r_v_v_q0,
        address1 => r_v_v_address1,
        ce1 => r_v_v_ce1,
        we1 => r_v_v_we1,
        d1 => r_v_v_d1,
        q1 => r_v_v_q1);

    grp_float_to_fixed_top_Pipeline_1_fu_267 : component float_to_fixed_top_float_to_fixed_top_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start,
        ap_done => grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done,
        ap_idle => grp_float_to_fixed_top_Pipeline_1_fu_267_ap_idle,
        ap_ready => grp_float_to_fixed_top_Pipeline_1_fu_267_ap_ready,
        r_v_v_address0 => grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_address0,
        r_v_v_ce0 => grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_ce0,
        r_v_v_we0 => grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_we0,
        r_v_v_d0 => grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_float_to_fixed_top_Pipeline_1_fu_267_ap_ready = ap_const_logic_1)) then 
                    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                and_ln1796_reg_1086 <= and_ln1796_fu_729_p2;
                and_ln1828_1_reg_1081 <= and_ln1828_1_fu_719_p2;
                or_ln1796_reg_1076 <= or_ln1796_fu_704_p2;
                select_ln1796_3_reg_1091 <= select_ln1796_3_fu_772_p3;
                select_ln1796_5_reg_1096 <= select_ln1796_5_fu_800_p3;
                    zext_ln1794_reg_1061(4 downto 0) <= zext_ln1794_fu_575_p1(4 downto 0);
                    zext_ln1799_reg_1066(5 downto 0) <= zext_ln1799_fu_592_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                and_ln1817_reg_1050 <= and_ln1817_fu_546_p2;
                hw_2_reg_1029 <= r_v_v_q1;
                icmp_ln1817_reg_1014 <= icmp_ln1817_fu_456_p2;
                or_ln1820_reg_1045 <= or_ln1820_fu_540_p2;
                select_ln1817_reg_1056 <= select_ln1817_fu_561_p3;
                    zext_ln1814_reg_1009(4 downto 0) <= zext_ln1814_fu_450_p1(4 downto 0);
                    zext_ln511_reg_1019(5 downto 0) <= zext_ln511_fu_467_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                hw_1_reg_954 <= r_v_v_q0;
                sext_ln1795_reg_943 <= sext_ln1795_fu_375_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                icmp_ln1799_reg_993 <= icmp_ln1799_fu_423_p2;
                icmp_ln1820_reg_972 <= icmp_ln1820_fu_407_p2;
                lw_5_reg_986 <= r_v_v_q1;
                tmp_1_reg_1003 <= r_v_v_q0(31 downto 23);
                    zext_ln1815_reg_967(26 downto 0) <= zext_ln1815_fu_397_p1(26 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln1820_reg_972 = ap_const_lv1_1))) then
                icmp_ln1820_1_reg_1035 <= icmp_ln1820_1_fu_512_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                ishift_reg_911 <= flopo(71 downto 69);
                lw_9_reg_883 <= flopo(31 downto 31);
                op2_assign_reg_891 <= flopo(71 downto 64);
                s31_1_reg_896 <= flopo(68 downto 64);
                tmp_5_reg_903 <= flopo(71 downto 71);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then
                reg_272 <= r_v_v_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                s31_reg_925 <= s31_fu_345_p1;
                trunc_ln_reg_932 <= sub_ln1836_fu_339_p2(8 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                select_ln1889_reg_918 <= select_ln1889_fu_327_p3;
            end if;
        end if;
    end process;
    zext_ln1815_reg_967(27) <= '0';
    zext_ln1814_reg_1009(31 downto 5) <= "000000000000000000000000000";
    zext_ln511_reg_1019(31 downto 6) <= "00000000000000000000000000";
    zext_ln1794_reg_1061(31 downto 5) <= "000000000000000000000000000";
    zext_ln1799_reg_1066(31 downto 6) <= "00000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1820_1_fu_359_p2 <= std_logic_vector(signed(trunc_ln_fu_349_p4) + signed(ap_const_lv4_4));
    add_ln1820_2_fu_401_p2 <= std_logic_vector(unsigned(zext_ln1815_fu_397_p1) + unsigned(ap_const_lv28_5));
    add_ln1820_3_fu_507_p2 <= std_logic_vector(unsigned(zext_ln1815_reg_967) + unsigned(ap_const_lv28_6));
    add_ln1820_fu_370_p2 <= std_logic_vector(signed(trunc_ln_reg_932) + signed(ap_const_lv4_3));
    and_ln1796_fu_729_p2 <= (xor_ln1835_fu_724_p2 and icmp_ln1796_fu_581_p2);
    and_ln1817_fu_546_p2 <= (tmp_5_reg_903 and icmp_ln1817_fu_456_p2);
    and_ln1820_fu_657_p2 <= (icmp_ln1820_reg_972 and icmp_ln1820_1_reg_1035);
    and_ln1828_1_fu_719_p2 <= (tmp_5_reg_903 and and_ln1828_fu_714_p2);
    and_ln1828_fu_714_p2 <= (xor_ln1817_fu_709_p2 and icmp_ln1820_reg_972);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done)
    begin
        if ((grp_float_to_fixed_top_Pipeline_1_fu_267_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    fixpo <= ((select_ln1796_3_reg_1091 & select_ln1796_5_reg_1096) & select_ln1796_1_fu_862_p3);

    fixpo_ap_vld_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            fixpo_ap_vld <= ap_const_logic_1;
        else 
            fixpo_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start <= grp_float_to_fixed_top_Pipeline_1_fu_267_ap_start_reg;
    hw_3_fu_807_p3 <= 
        r_v_v_q1 when (icmp_ln1799_reg_993(0) = '1') else 
        ap_const_lv32_0;
    hw_5_fu_669_p3 <= 
        select_ln1820_2_fu_661_p3 when (icmp_ln1820_reg_972(0) = '1') else 
        select_ln1164_fu_568_p3;
    icmp_ln1796_fu_581_p2 <= "1" when (s31_1_reg_896 = ap_const_lv5_0) else "0";
    icmp_ln1799_fu_423_p2 <= "1" when (unsigned(ishift_reg_911) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln1817_fu_456_p2 <= "0" when (s31_reg_925 = ap_const_lv5_0) else "1";
    icmp_ln1820_1_fu_512_p2 <= "1" when (unsigned(add_ln1820_3_fu_507_p2) < unsigned(ap_const_lv28_9)) else "0";
    icmp_ln1820_fu_407_p2 <= "1" when (unsigned(add_ln1820_2_fu_401_p2) < unsigned(ap_const_lv28_9)) else "0";
    lshr_ln1799_1_fu_611_p2 <= std_logic_vector(shift_right(unsigned(reg_272),to_integer(unsigned('0' & zext_ln1799_fu_592_p1(31-1 downto 0)))));
    lshr_ln1799_2_fu_633_p2 <= std_logic_vector(shift_right(unsigned(lw_5_reg_986),to_integer(unsigned('0' & zext_ln1799_fu_592_p1(31-1 downto 0)))));
    lshr_ln1799_fu_819_p2 <= std_logic_vector(shift_right(unsigned(hw_3_fu_807_p3),to_integer(unsigned('0' & zext_ln1799_reg_1066(31-1 downto 0)))));
    lshr_ln1820_1_fu_502_p2 <= std_logic_vector(shift_right(unsigned(hw_1_reg_954),to_integer(unsigned('0' & zext_ln1814_fu_450_p1(31-1 downto 0)))));
    lshr_ln1820_2_fu_680_p2 <= std_logic_vector(shift_right(unsigned(lw_7_fu_652_p3),to_integer(unsigned('0' & zext_ln1814_reg_1009(31-1 downto 0)))));
    lshr_ln1820_fu_471_p2 <= std_logic_vector(shift_right(unsigned(reg_272),to_integer(unsigned('0' & zext_ln1814_fu_450_p1(31-1 downto 0)))));
    lw_7_fu_652_p3 <= 
        hw_2_reg_1029 when (icmp_ln1820_reg_972(0) = '1') else 
        select_ln1889_reg_918;
    or_ln1796_fu_704_p2 <= (tmp_5_reg_903 or icmp_ln1796_fu_581_p2);
    or_ln1799_1_fu_617_p2 <= (shl_ln1799_1_fu_606_p2 or lshr_ln1799_1_fu_611_p2);
    or_ln1799_2_fu_642_p2 <= (trunc_ln1799_fu_629_p1 or trunc_ln1799_1_fu_638_p1);
    or_ln1799_fu_824_p2 <= (shl_ln1799_fu_814_p2 or lshr_ln1799_fu_819_p2);
    or_ln1820_1_fu_482_p2 <= (shl_ln1820_fu_477_p2 or lshr_ln1820_fu_471_p2);
    or_ln1820_2_fu_698_p2 <= (trunc_ln1820_3_fu_694_p1 or trunc_ln1820_2_fu_685_p1);
    or_ln1820_fu_540_p2 <= (shl_ln1820_1_fu_534_p2 or lshr_ln1820_1_fu_502_p2);

    r_v_v_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_address0, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8, zext_ln513_fu_365_p1, zext_ln513_3_fu_378_p1, zext_ln513_4_fu_418_p1, zext_ln513_6_fu_493_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_v_v_address0 <= zext_ln513_6_fu_493_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_v_v_address0 <= zext_ln513_4_fu_418_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_v_v_address0 <= zext_ln513_3_fu_378_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            r_v_v_address0 <= zext_ln513_fu_365_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_v_v_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_v_v_address0 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_v_v_address0 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_v_v_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            r_v_v_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_v_v_address0 <= grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_address0;
        else 
            r_v_v_address0 <= "XXXX";
        end if; 
    end process;


    r_v_v_address1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state13, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8, zext_ln513_5_fu_389_p1, zext_ln513_1_fu_428_p1, zext_ln513_2_fu_518_p1, zext_ln513_7_fu_601_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            r_v_v_address1 <= zext_ln513_7_fu_601_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            r_v_v_address1 <= zext_ln513_2_fu_518_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            r_v_v_address1 <= zext_ln513_1_fu_428_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            r_v_v_address1 <= zext_ln513_5_fu_389_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_v_v_address1 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_v_v_address1 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_v_v_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            r_v_v_address1 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            r_v_v_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            r_v_v_address1 <= "XXXX";
        end if; 
    end process;


    r_v_v_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state10, grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_ce0, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            r_v_v_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_v_v_ce0 <= grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_ce0;
        else 
            r_v_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    r_v_v_ce1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state10, ap_CS_fsm_state13, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            r_v_v_ce1 <= ap_const_logic_1;
        else 
            r_v_v_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    r_v_v_d0_assign_proc : process(ap_CS_fsm_state1, select_ln1889_fu_327_p3, select_ln1889_reg_918, ap_CS_fsm_state7, grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_d0, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_v_v_d0 <= select_ln1889_reg_918;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_v_v_d0 <= select_ln1889_fu_327_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            r_v_v_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_v_v_d0 <= grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_d0;
        else 
            r_v_v_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_v_v_d1_assign_proc : process(ap_CS_fsm_state6, select_ln1889_fu_327_p3, select_ln1889_reg_918, ap_CS_fsm_state7, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8, trunc_ln629_fu_276_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            r_v_v_d1 <= select_ln1889_reg_918;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_v_v_d1 <= select_ln1889_fu_327_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            r_v_v_d1 <= trunc_ln629_fu_276_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            r_v_v_d1 <= ap_const_lv32_0;
        else 
            r_v_v_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    r_v_v_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_we0, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            r_v_v_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            r_v_v_we0 <= grp_float_to_fixed_top_Pipeline_1_fu_267_r_v_v_we0;
        else 
            r_v_v_we0 <= ap_const_logic_0;
        end if; 
    end process;


    r_v_v_we1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            r_v_v_we1 <= ap_const_logic_1;
        else 
            r_v_v_we1 <= ap_const_logic_0;
        end if; 
    end process;

    s31_fu_345_p1 <= sub_ln1836_fu_339_p2(5 - 1 downto 0);
    select_ln1164_1_fu_443_p3 <= 
        ap_const_lv31_7FFFFFFF when (lw_9_reg_883(0) = '1') else 
        ap_const_lv31_0;
    select_ln1164_2_fu_742_p3 <= 
        ap_const_lv23_7FFFFF when (lw_9_reg_883(0) = '1') else 
        ap_const_lv23_0;
    select_ln1164_fu_568_p3 <= 
        ap_const_lv22_3FFFFF when (lw_9_reg_883(0) = '1') else 
        ap_const_lv22_0;
    select_ln1796_1_fu_862_p3 <= 
        tmp_fu_830_p4 when (and_ln1796_reg_1086(0) = '1') else 
        select_ln1828_fu_856_p3;
    select_ln1796_2_fu_756_p3 <= 
        select_ln1817_1_fu_749_p3 when (or_ln1796_fu_704_p2(0) = '1') else 
        or_ln1799_2_fu_642_p2;
    select_ln1796_3_fu_772_p3 <= 
        trunc_ln1911_fu_735_p1 when (and_ln1796_fu_729_p2(0) = '1') else 
        select_ln1828_1_fu_764_p3;
    select_ln1796_4_fu_785_p3 <= 
        select_ln1817_2_fu_780_p3 when (or_ln1796_fu_704_p2(0) = '1') else 
        or_ln1799_1_fu_617_p2;
    select_ln1796_5_fu_800_p3 <= 
        lw_5_reg_986 when (and_ln1796_fu_729_p2(0) = '1') else 
        select_ln1828_2_fu_793_p3;
    select_ln1796_fu_850_p3 <= 
        select_ln1817_reg_1056 when (or_ln1796_reg_1076(0) = '1') else 
        tmp_4_fu_840_p4;
    select_ln1817_1_fu_749_p3 <= 
        or_ln1820_2_fu_698_p2 when (and_ln1817_reg_1050(0) = '1') else 
        select_ln1164_2_fu_742_p3;
    select_ln1817_2_fu_780_p3 <= 
        or_ln1820_reg_1045 when (and_ln1817_reg_1050(0) = '1') else 
        hw_1_reg_954;
    select_ln1817_fu_561_p3 <= 
        tmp_2_fu_551_p4 when (and_ln1817_fu_546_p2(0) = '1') else 
        tmp_1_reg_1003;
    select_ln1820_2_fu_661_p3 <= 
        trunc_ln1820_1_fu_648_p1 when (and_ln1820_fu_657_p2(0) = '1') else 
        select_ln1164_fu_568_p3;
    select_ln1820_fu_523_p3 <= 
        trunc_ln1820_fu_498_p1 when (icmp_ln1820_reg_972(0) = '1') else 
        select_ln1164_1_fu_443_p3;
    select_ln1828_1_fu_764_p3 <= 
        trunc_ln1911_1_fu_739_p1 when (and_ln1828_1_fu_719_p2(0) = '1') else 
        select_ln1796_2_fu_756_p3;
    select_ln1828_2_fu_793_p3 <= 
        hw_1_reg_954 when (and_ln1828_1_fu_719_p2(0) = '1') else 
        select_ln1796_4_fu_785_p3;
    select_ln1828_fu_856_p3 <= 
        tmp_1_reg_1003 when (and_ln1828_1_reg_1081(0) = '1') else 
        select_ln1796_fu_850_p3;
    select_ln1889_fu_327_p3 <= 
        ap_const_lv32_FFFFFFFF when (lw_9_reg_883(0) = '1') else 
        ap_const_lv32_0;
        sext_ln1795_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ishift_reg_911),4));

        sext_ln1815_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_932),27));

        sext_ln2476_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(op2_assign_reg_891),9));

    shl_ln1799_1_fu_606_p2 <= std_logic_vector(shift_left(unsigned(lw_5_reg_986),to_integer(unsigned('0' & zext_ln1794_fu_575_p1(31-1 downto 0)))));
    shl_ln1799_2_fu_623_p2 <= std_logic_vector(shift_left(unsigned(r_v_v_q0),to_integer(unsigned('0' & zext_ln1794_fu_575_p1(31-1 downto 0)))));
    shl_ln1799_fu_814_p2 <= std_logic_vector(shift_left(unsigned(reg_272),to_integer(unsigned('0' & zext_ln1794_reg_1061(31-1 downto 0)))));
    shl_ln1820_1_fu_534_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1820_fu_530_p1),to_integer(unsigned('0' & zext_ln511_fu_467_p1(31-1 downto 0)))));
    shl_ln1820_2_fu_689_p2 <= std_logic_vector(shift_left(unsigned(zext_ln1820_1_fu_676_p1),to_integer(unsigned('0' & zext_ln511_reg_1019(31-1 downto 0)))));
    shl_ln1820_fu_477_p2 <= std_logic_vector(shift_left(unsigned(hw_1_reg_954),to_integer(unsigned('0' & zext_ln511_fu_467_p1(31-1 downto 0)))));
    sub6_i_i_i_i_i_fu_586_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(zext_ln1794_1_fu_578_p1));
    sub_i_i_i_i_i_fu_461_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(zext_ln1814_1_fu_453_p1));
    sub_ln1799_fu_596_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) - unsigned(sext_ln1795_reg_943));
    sub_ln1807_1_fu_383_p2 <= std_logic_vector(unsigned(ap_const_lv4_4) - unsigned(sext_ln1795_fu_375_p1));
    sub_ln1807_2_fu_488_p2 <= std_logic_vector(unsigned(ap_const_lv4_5) - unsigned(sext_ln1795_reg_943));
    sub_ln1807_fu_413_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) - unsigned(ishift_reg_911));
    sub_ln1836_fu_339_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sext_ln2476_fu_336_p1));
    tmp_2_fu_551_p4 <= or_ln1820_1_fu_482_p2(31 downto 23);
    tmp_4_fu_840_p4 <= or_ln1799_fu_824_p2(31 downto 23);
    tmp_fu_830_p4 <= reg_272(31 downto 23);
    trunc_ln1799_1_fu_638_p1 <= lshr_ln1799_2_fu_633_p2(23 - 1 downto 0);
    trunc_ln1799_fu_629_p1 <= shl_ln1799_2_fu_623_p2(23 - 1 downto 0);
    trunc_ln1820_1_fu_648_p1 <= r_v_v_q1(22 - 1 downto 0);
    trunc_ln1820_2_fu_685_p1 <= lshr_ln1820_2_fu_680_p2(23 - 1 downto 0);
    trunc_ln1820_3_fu_694_p1 <= shl_ln1820_2_fu_689_p2(23 - 1 downto 0);
    trunc_ln1820_fu_498_p1 <= r_v_v_q1(31 - 1 downto 0);
    trunc_ln1911_1_fu_739_p1 <= hw_2_reg_1029(23 - 1 downto 0);
    trunc_ln1911_fu_735_p1 <= r_v_v_q0(23 - 1 downto 0);
    trunc_ln629_fu_276_p1 <= flopo(32 - 1 downto 0);
    trunc_ln_fu_349_p4 <= sub_ln1836_fu_339_p2(8 downto 5);
    xor_ln1817_fu_709_p2 <= (icmp_ln1817_reg_1014 xor ap_const_lv1_1);
    xor_ln1835_fu_724_p2 <= (tmp_5_reg_903 xor ap_const_lv1_1);
    zext_ln1794_1_fu_578_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_1_reg_896),6));
    zext_ln1794_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_1_reg_896),32));
    zext_ln1799_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub6_i_i_i_i_i_fu_586_p2),32));
    zext_ln1814_1_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_reg_925),6));
    zext_ln1814_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_reg_925),32));
    zext_ln1815_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1815_fu_394_p1),28));
    zext_ln1820_1_fu_676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hw_5_fu_669_p3),32));
    zext_ln1820_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1820_fu_523_p3),32));
    zext_ln511_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_i_i_i_i_i_fu_461_p2),32));
    zext_ln513_1_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1820_2_fu_401_p2),64));
    zext_ln513_2_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1820_3_fu_507_p2),64));
    zext_ln513_3_fu_378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1820_fu_370_p2),64));
    zext_ln513_4_fu_418_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1807_fu_413_p2),64));
    zext_ln513_5_fu_389_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1807_1_fu_383_p2),64));
    zext_ln513_6_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1807_2_fu_488_p2),64));
    zext_ln513_7_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln1799_fu_596_p2),64));
    zext_ln513_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1820_1_fu_359_p2),64));
end behav;
