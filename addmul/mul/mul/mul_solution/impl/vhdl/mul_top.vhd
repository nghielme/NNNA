-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mul_top is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (127 downto 0);
    b : IN STD_LOGIC_VECTOR (127 downto 0);
    res : OUT STD_LOGIC_VECTOR (127 downto 0);
    res_ap_vld : OUT STD_LOGIC );
end;


architecture behav of mul_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mul_top_mul_top,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=50.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=26.789000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=876,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv10_2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv31_10000000 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv10_380 : STD_LOGIC_VECTOR (9 downto 0) := "1110000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11100000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv25_1FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111111111111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv25_1000000 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv25_FFFFFF : STD_LOGIC_VECTOR (24 downto 0) := "0111111111111111111111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";

    signal trunc_ln609_fu_135_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln609_1_fu_139_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln609_2_fu_157_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln609_3_fu_167_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln654_fu_151_p2 : STD_LOGIC_VECTOR (49 downto 0);
    signal trunc_ln678_1_fu_189_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal value_3_fu_185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln678_fu_199_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln1034_fu_203_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1346_1_fu_181_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1346_fu_177_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal retval_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln355_fu_215_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal hw_fu_229_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln355_fu_221_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1309_fu_249_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal retval_1_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal value_fu_253_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln609_fu_259_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_267_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln609_fu_275_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal value_2_fu_289_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln609_1_fu_307_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln609_1_fu_315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_329_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_321_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal retval_2_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1845_fu_351_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_5_fu_369_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1795_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_361_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal s31_fu_357_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ishift_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s31_1_fu_295_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_fu_419_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1815_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ext_fu_441_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln609_5_fu_471_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal s31cast_fu_487_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln1814_1_fu_407_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_i_i_i_i_i_fu_505_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln609_fu_239_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1814_fu_403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln1820_fu_515_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1816_fu_449_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1820_fu_511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1820_fu_525_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1820_1_fu_531_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1820_fu_521_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ishift_1_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1816_1_fu_457_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_1_fu_299_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1817_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1817_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1817_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1817_fu_561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1820_fu_535_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1828_fu_541_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln1796_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_fu_575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1796_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_1_fu_581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln1799_fu_491_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1817_fu_567_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln1796_1_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1796_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1796_2_fu_607_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1807_fu_497_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln1796_fu_587_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_fu_281_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln543_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1123_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln543_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln609_1_fu_613_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal or_ln543_1_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln543_fu_633_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln543_1_fu_647_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal select_ln543_2_fu_655_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_9_fu_667_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln609_fu_481_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1123_fu_675_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln543_3_fu_683_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1123_fu_663_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_691_p4 : STD_LOGIC_VECTOR (71 downto 0);
    signal sext_ln6_fu_701_p1 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component mul_top_mul_25s_25s_50_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (24 downto 0);
        din1 : IN STD_LOGIC_VECTOR (24 downto 0);
        dout : OUT STD_LOGIC_VECTOR (49 downto 0) );
    end component;



begin
    mul_25s_25s_50_1_1_U1 : component mul_top_mul_25s_25s_50_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 25,
        din1_WIDTH => 25,
        dout_WIDTH => 50)
    port map (
        din0 => trunc_ln609_fu_135_p1,
        din1 => trunc_ln609_1_fu_139_p1,
        dout => mul_ln654_fu_151_p2);




    add_ln355_fu_215_p2 <= std_logic_vector(signed(sext_ln1346_1_fu_181_p1) + signed(sext_ln1346_fu_177_p1));
    add_ln609_1_fu_315_p2 <= std_logic_vector(unsigned(shl_ln609_1_fu_307_p3) + unsigned(ap_const_lv32_E0000000));
    add_ln609_fu_275_p2 <= std_logic_vector(unsigned(shl_ln_fu_267_p3) + unsigned(ap_const_lv31_10000000));
    and_ln1796_1_fu_581_p2 <= (icmp_ln1796_fu_391_p2 and and_ln1796_fu_575_p2);
    and_ln1796_2_fu_607_p2 <= (tmp_1_fu_299_p3 and or_ln1796_fu_601_p2);
    and_ln1796_fu_575_p2 <= (xor_ln1796_fu_397_p2 and tmp_1_fu_299_p3);
    and_ln1817_fu_561_p2 <= (xor_ln1817_fu_555_p2 and icmp_ln1817_fu_465_p2);
    and_ln543_fu_627_p2 <= (xor_ln1123_fu_621_p2 and or_ln543_fu_345_p2);
    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    ext_fu_441_p3 <= mul_ln654_fu_151_p2(49 downto 49);
    hw_fu_229_p4 <= mul_ln654_fu_151_p2(49 downto 25);
    icmp_ln1795_fu_379_p2 <= "0" when (tmp_5_fu_369_p4 = ap_const_lv4_0) else "1";
    icmp_ln1796_fu_391_p2 <= "0" when (s31_fu_357_p1 = ap_const_lv5_0) else "1";
    icmp_ln1815_fu_429_p2 <= "0" when (tmp_7_fu_419_p4 = ap_const_lv4_0) else "1";
    icmp_ln1817_fu_465_p2 <= "0" when (s31_1_fu_295_p1 = ap_const_lv5_0) else "1";
    ishift_1_fu_435_p2 <= (tmp_6_fu_411_p3 or icmp_ln1815_fu_429_p2);
    ishift_fu_385_p2 <= (tmp_4_fu_361_p3 or icmp_ln1795_fu_379_p2);
    lshr_ln1820_fu_515_p2 <= std_logic_vector(shift_right(unsigned(sext_ln609_fu_239_p1),to_integer(unsigned('0' & zext_ln1814_fu_403_p1(31-1 downto 0)))));
    or_ln1034_fu_203_p2 <= (value_3_fu_185_p1 or sext_ln678_fu_199_p1);
    or_ln1796_fu_601_p2 <= (xor_ln1796_1_fu_595_p2 or ishift_fu_385_p2);
    or_ln1817_fu_549_p2 <= (tmp_1_fu_299_p3 or ishift_1_fu_435_p2);
    or_ln1820_fu_535_p2 <= (trunc_ln1820_fu_521_p1 or trunc_ln1820_1_fu_531_p1);
    or_ln543_1_fu_641_p2 <= (tmp_fu_281_p3 or and_ln543_fu_627_p2);
    or_ln543_fu_345_p2 <= (tmp_2_fu_321_p3 or retval_2_fu_339_p2);
    res <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln6_fu_701_p1),128));

    res_ap_vld_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_1)) then 
            res_ap_vld <= ap_const_logic_1;
        else 
            res_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    retval_1_fu_243_p2 <= "1" when (hw_fu_229_p4 = ap_const_lv25_0) else "0";
    retval_2_fu_339_p2 <= "1" when (tmp_3_fu_329_p4 = ap_const_lv3_0) else "0";
    retval_fu_209_p2 <= "1" when (or_ln1034_fu_203_p2 = ap_const_lv32_0) else "0";
    s31_1_fu_295_p1 <= value_2_fu_289_p2(5 - 1 downto 0);
    s31_fu_357_p1 <= sub_ln1845_fu_351_p2(5 - 1 downto 0);
    s31cast_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_fu_357_p1),25));
    select_ln1123_fu_675_p3 <= 
        ap_const_lv8_80 when (tmp_9_fu_667_p3(0) = '1') else 
        ap_const_lv8_7F;
    select_ln1796_fu_587_p3 <= 
        shl_ln1799_fu_491_p2 when (and_ln1796_1_fu_581_p2(0) = '1') else 
        select_ln1817_fu_567_p3;
    select_ln1807_fu_497_p3 <= 
        ap_const_lv25_0 when (ishift_fu_385_p2(0) = '1') else 
        hw_fu_229_p4;
    select_ln1816_1_fu_457_p3 <= 
        ap_const_lv25_1FFFFFF when (ext_fu_441_p3(0) = '1') else 
        ap_const_lv25_0;
    select_ln1816_fu_449_p3 <= 
        ap_const_lv32_FFFFFFFF when (ext_fu_441_p3(0) = '1') else 
        ap_const_lv32_0;
    select_ln1817_fu_567_p3 <= 
        or_ln1820_fu_535_p2 when (and_ln1817_fu_561_p2(0) = '1') else 
        select_ln1828_fu_541_p3;
    select_ln1828_fu_541_p3 <= 
        select_ln1816_1_fu_457_p3 when (ishift_1_fu_435_p2(0) = '1') else 
        hw_fu_229_p4;
    select_ln355_fu_221_p3 <= 
        ap_const_lv9_0 when (retval_fu_209_p2(0) = '1') else 
        add_ln355_fu_215_p2;
    select_ln543_1_fu_647_p3 <= 
        ap_const_lv25_1000000 when (ext_fu_441_p3(0) = '1') else 
        ap_const_lv25_FFFFFF;
    select_ln543_2_fu_655_p3 <= 
        select_ln543_fu_633_p3 when (or_ln543_1_fu_641_p2(0) = '1') else 
        select_ln543_1_fu_647_p3;
    select_ln543_3_fu_683_p3 <= 
        xor_ln609_fu_481_p2 when (and_ln543_fu_627_p2(0) = '1') else 
        select_ln1123_fu_675_p3;
    select_ln543_fu_633_p3 <= 
        hw_fu_229_p4 when (and_ln543_fu_627_p2(0) = '1') else 
        select_ln609_1_fu_613_p3;
    select_ln609_1_fu_613_p3 <= 
        select_ln1807_fu_497_p3 when (and_ln1796_2_fu_607_p2(0) = '1') else 
        select_ln1796_fu_587_p3;
    select_ln609_fu_259_p3 <= 
        ap_const_lv10_0 when (retval_1_fu_243_p2(0) = '1') else 
        value_fu_253_p2;
        sext_ln1123_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln543_2_fu_655_p3),32));

        sext_ln1309_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln355_fu_221_p3),10));

        sext_ln1346_1_fu_181_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln609_3_fu_167_p4),9));

        sext_ln1346_fu_177_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln609_2_fu_157_p4),9));

        sext_ln609_fu_239_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(hw_fu_229_p4),32));

        sext_ln678_fu_199_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln678_1_fu_189_p4),32));

        sext_ln6_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_i_fu_691_p4),96));

    shl_ln1799_fu_491_p2 <= std_logic_vector(shift_left(unsigned(hw_fu_229_p4),to_integer(unsigned('0' & s31cast_fu_487_p1(25-1 downto 0)))));
    shl_ln1820_fu_525_p2 <= std_logic_vector(shift_left(unsigned(select_ln1816_fu_449_p3),to_integer(unsigned('0' & zext_ln1820_fu_511_p1(31-1 downto 0)))));
    shl_ln609_1_fu_307_p3 <= (add_ln609_fu_275_p2 & ap_const_lv1_0);
    shl_ln_fu_267_p3 <= (select_ln609_fu_259_p3 & ap_const_lv21_0);
    sub_i_i_i_i_i_fu_505_p2 <= std_logic_vector(signed(ap_const_lv6_20) - signed(zext_ln1814_1_fu_407_p1));
    sub_ln1845_fu_351_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(value_2_fu_289_p2));
    tmp_1_fu_299_p3 <= value_2_fu_289_p2(9 downto 9);
    tmp_2_fu_321_p3 <= add_ln609_1_fu_315_p2(31 downto 31);
    tmp_3_fu_329_p4 <= add_ln609_1_fu_315_p2(31 downto 29);
    tmp_4_fu_361_p3 <= sub_ln1845_fu_351_p2(5 downto 5);
    tmp_5_fu_369_p4 <= sub_ln1845_fu_351_p2(9 downto 6);
    tmp_6_fu_411_p3 <= value_2_fu_289_p2(5 downto 5);
    tmp_7_fu_419_p4 <= value_2_fu_289_p2(9 downto 6);
    tmp_9_fu_667_p3 <= add_ln609_fu_275_p2(30 downto 30);
    tmp_fu_281_p3 <= add_ln609_fu_275_p2(30 downto 30);
    tmp_i_fu_691_p4 <= ((select_ln543_3_fu_683_p3 & ap_const_lv32_0) & sext_ln1123_fu_663_p1);
    trunc_ln1820_1_fu_531_p1 <= shl_ln1820_fu_525_p2(25 - 1 downto 0);
    trunc_ln1820_fu_521_p1 <= lshr_ln1820_fu_515_p2(25 - 1 downto 0);
    trunc_ln609_1_fu_139_p1 <= b(25 - 1 downto 0);
    trunc_ln609_2_fu_157_p4 <= a(71 downto 64);
    trunc_ln609_3_fu_167_p4 <= b(71 downto 64);
    trunc_ln609_5_fu_471_p4 <= add_ln609_fu_275_p2(28 downto 21);
    trunc_ln609_fu_135_p1 <= a(25 - 1 downto 0);
    trunc_ln678_1_fu_189_p4 <= mul_ln654_fu_151_p2(49 downto 32);
    value_2_fu_289_p2 <= std_logic_vector(signed(ap_const_lv10_380) - signed(select_ln609_fu_259_p3));
    value_3_fu_185_p1 <= mul_ln654_fu_151_p2(32 - 1 downto 0);
    value_fu_253_p2 <= std_logic_vector(signed(sext_ln1309_fu_249_p1) + signed(ap_const_lv10_2));
    xor_ln1123_fu_621_p2 <= (tmp_fu_281_p3 xor ap_const_lv1_1);
    xor_ln1796_1_fu_595_p2 <= (icmp_ln1796_fu_391_p2 xor ap_const_lv1_1);
    xor_ln1796_fu_397_p2 <= (ishift_fu_385_p2 xor ap_const_lv1_1);
    xor_ln1817_fu_555_p2 <= (or_ln1817_fu_549_p2 xor ap_const_lv1_1);
    xor_ln609_fu_481_p2 <= (trunc_ln609_5_fu_471_p4 xor ap_const_lv8_80);
    zext_ln1814_1_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_1_fu_295_p1),6));
    zext_ln1814_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s31_1_fu_295_p1),32));
    zext_ln1820_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_i_i_i_i_i_fu_505_p2),32));
end behav;
